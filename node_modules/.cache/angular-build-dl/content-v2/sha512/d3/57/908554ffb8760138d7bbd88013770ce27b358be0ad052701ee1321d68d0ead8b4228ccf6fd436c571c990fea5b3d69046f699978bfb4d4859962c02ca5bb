{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/administrator-details/administrator-detail-list/administrator-detail-list.component.ts","webpack:///src/app/administrator-details/administrator-detail-list/administrator-detail-list.component.html","webpack:///src/app/administrator-details/administrator-detail/administrator-detail.component.ts","webpack:///src/app/administrator-details/administrator-detail/administrator-detail.component.html","webpack:///src/app/administrator-details/administrator-details.component.ts","webpack:///src/app/administrator-details/administrator-details.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/superadmin.guard.ts","webpack:///src/app/auth/token-auth.guard.ts","webpack:///src/app/auth/token-null.guard.ts","webpack:///src/app/auth/token.interceptor.ts","webpack:///src/app/author-details/author-detail-list/author-detail-list.component.ts","webpack:///src/app/author-details/author-detail-list/author-detail-list.component.html","webpack:///src/app/author-details/author-detail/author-detail.component.ts","webpack:///src/app/author-details/author-detail/author-detail.component.html","webpack:///src/app/author-details/author-details.component.ts","webpack:///src/app/author-details/author-details.component.html","webpack:///src/app/bookrequest-details/bookrequest-details.component.ts","webpack:///src/app/bookrequest-details/bookrequest-details.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/logout/logout.component.ts","webpack:///src/app/nav-menu/nav-menu.component.ts","webpack:///src/app/nav-menu/nav-menu.component.html","webpack:///src/app/publisher-details/publisher-detail-list/publisher-detail-list.component.ts","webpack:///src/app/publisher-details/publisher-detail-list/publisher-detail-list.component.html","webpack:///src/app/publisher-details/publisher-detail/publisher-detail.component.ts","webpack:///src/app/publisher-details/publisher-detail/publisher-detail.component.html","webpack:///src/app/publisher-details/publisher-details.component.ts","webpack:///src/app/publisher-details/publisher-details.component.html","webpack:///src/app/shared/administrator-detail.service.ts","webpack:///src/app/shared/author-detail.service.ts","webpack:///src/app/shared/bookrequest-detail.service.ts","webpack:///src/app/shared/login.service.ts","webpack:///src/app/shared/publisher-detail.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdministratorDetailListComponent","service","toastr","refreshList","selectedRecord","formData","Object","assign","adminId","confirm","AdminId","FirstName","LastName","Nidno","PassportNo","Email","MobileNo","HomeAddress","City","State","Country","Uname","Upassword","AccountStatus","AdminLevel","deleteAdministratorDetail","subscribe","res","info","err","console","log","selector","templateUrl","styles","AdministratorDetailComponent","form","reset","putAdministratorDetail","resetForm","status","error","postAdministratorDetail","insertRecord","updateRecord","onSubmit","AdministratorDetailsComponent","routes","path","component","pathMatch","canActivate","AppRoutingModule","forRoot","imports","AppComponent","router","title","window","addEventListener","event","storageArea","localStorage","token","getItem","undefined","location","reload","navigate","AppModule","provide","useClass","multi","progressBar","declarations","providers","bootstrap","SuperadminGuard","next","state","providedIn","TokenAuthGuard","TokenNullGuard","TokenInterceptor","request","clonedReq","clone","headers","set","handle","pipe","succ","removeItem","navigateByUrl","AuthorDetailListComponent","authorId","AuthorId","deleteAuthorDetail","AuthorDetailComponent","putAuthorDetail","postAuthorDetail","AuthorDetailsComponent","BookrequestDetailsComponent","requestId","approved","putBookRequestDetail","FooterComponent","HomeComponent","adminName","adminRole","LoginComponent","formModel","login","value","jwtData","split","decodedJwtJsonData","atob","decodedJwtData","JSON","parse","AdminName","AdminRole","setItem","LogoutComponent","NavMenuComponent","isExpanded","isTokenExists","toggle","styleUrls","PublisherDetailListComponent","publisherId","PublisherId","PublisherName","deletePublisherDetail","PublisherDetailComponent","putPublisherDetail","postPublisherDetail","PublisherDetailsComponent","AdministratorDetailService","http","rootURL","post","put","get","toPromise","list","AuthorDetailService","BookrequestDetailService","LoginService","fb","BaseURI","group","required","Upasswords","PublisherDetailService","environment","production","bootstrapModule"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AAA2B;;AAAU;;;;;;;;AAGnC;;AACE;;AAAI;;AAAsE;;AAC1E;;AAAI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4C;;AAAG;;AACnD;;AACE;;AAEA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgD;;AAClD;;AACF;;;;;;AAPM;;AAAA;;;;QDMKC,gC;AAEX,gDAAmBC,OAAnB,EAA+DC,MAA/D,EAAsF;AAAA;;AAAnE,aAAAD,OAAA,GAAAA,OAAA;AAA4C,aAAAC,MAAA,GAAAA,MAAA;AAA0B;;;;mCAEjF;AACN,eAAKD,OAAL,CAAaE,WAAb;AACD;;;qCAEYC,c,EAAgB;AAC3B,eAAKH,OAAL,CAAaI,QAAb,GAAwBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,cAAlB,CAAxB;AACD;;;iCAEQI,O,EAAS;AAAA;;AAChB,cAAIC,OAAO,CAAC,sCAAD,CAAX,EAAqD;AACnD,gBAAG,KAAKR,OAAL,CAAaI,QAAb,CAAsBK,OAAtB,IAAiCF,OAApC,EACA;AACE,mBAAKP,OAAL,CAAaI,QAAb,GAAwB;AACtBK,uBAAO,EAAE,CADa;AAEtBC,yBAAS,EAAE,EAFW;AAGtBC,wBAAQ,EAAE,EAHY;AAItBC,qBAAK,EAAE,EAJe;AAKtBC,0BAAU,EAAE,EALU;AAMtBC,qBAAK,EAAE,EANe;AAOtBC,wBAAQ,EAAE,EAPY;AAQtBC,2BAAW,EAAE,EARS;AAStBC,oBAAI,EAAE,EATgB;AAUtBC,qBAAK,EAAE,EAVe;AAWtBC,uBAAO,EAAE,EAXa;AAYtBC,qBAAK,EAAE,EAZe;AAatBC,yBAAS,EAAE,EAbW;AActBC,6BAAa,EAAE,EAdO;AAetBC,0BAAU,EAAE,CAAC;AAfS,eAAxB;AAiBD;;AACD,iBAAKvB,OAAL,CAAawB,yBAAb,CAAuCjB,OAAvC,EACGkB,SADH,CACa,UAAAC,GAAG,EAAI;AAChB,mBAAI,CAACzB,MAAL,CAAY0B,IAAZ,CAAiB,wBAAjB,EAA2C,sBAA3C;;AACA,mBAAI,CAAC3B,OAAL,CAAaE,WAAb;AACD,aAJH,EAKE,UAAA0B,GAAG,EAAI;AAAEC,qBAAO,CAACC,GAAR,CAAYF,GAAZ;AAAmB,aAL9B;AAMD;AACF;;;;;;;uBAzCU7B,gC,EAAgC,gK,EAAA,yH;AAAA,K;;;YAAhCA,gC;AAAgC,oD;AAAA,c;AAAA,a;AAAA,6K;AAAA;AAAA;ACV7C;;AAEA;;AACE;;AASF;;;;AAZK;;AAGC;;AAAA;;;;;;;;;sEDOOA,gC,EAAgC;cAN5C,uDAM4C;eANlC;AACTgC,kBAAQ,EAAE,+BADD;AAETC,qBAAW,EAAE,4CAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAMkC,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV7C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaC,4B;AAEX,4CAAmBlC,OAAnB,EAA+DC,MAA/D,EAAsF;AAAA;;AAAnE,aAAAD,OAAA,GAAAA,OAAA;AAA4C,aAAAC,MAAA,GAAAA,MAAA;AAA0B;;;;mCAEjF,CACP;;;kCAESkC,I,EAAe;AACvB,cAAIA,IAAI,IAAI,IAAZ,EACEA,IAAI,CAACA,IAAL,CAAUC,KAAV;AACF,eAAKpC,OAAL,CAAaI,QAAb,GAAwB;AACtBK,mBAAO,EAAE,CADa;AAElBC,qBAAS,EAAE,EAFO;AAGlBC,oBAAQ,EAAE,EAHQ;AAIlBC,iBAAK,EAAE,EAJW;AAKlBC,sBAAU,EAAE,EALM;AAMlBC,iBAAK,EAAE,EANW;AAOlBC,oBAAQ,EAAE,EAPQ;AAQlBC,uBAAW,EAAE,EARK;AASlBC,gBAAI,EAAE,EATY;AAUlBC,iBAAK,EAAC,EAVY;AAWlBC,mBAAO,EAAE,EAXS;AAYlBC,iBAAK,EAAE,EAZW;AAalBC,qBAAS,EAAE,EAbO;AAclBC,yBAAa,EAAE,EAdG;AAelBC,sBAAU,EAAE,CAAC;AAfK,WAAxB;AAiBD;;;qCAEYY,I,EAAc;AAAA;;AACzB,eAAKnC,OAAL,CAAaqC,sBAAb,GAAsCZ,SAAtC,CACE,UAAAC,GAAG,EAAI;AACL,kBAAI,CAACY,SAAL,CAAeH,IAAf;;AACA,kBAAI,CAAClC,MAAL,CAAY0B,IAAZ,CAAiB,wBAAjB,EAA2C,sBAA3C;;AACA,kBAAI,CAAC3B,OAAL,CAAaE,WAAb;AACD,WALH,EAME,UAAA0B,GAAG,EAAI;AACL,gBAAGA,GAAG,CAACW,MAAJ,IAAc,GAAjB,EACA;AACE,oBAAI,CAACtC,MAAL,CAAYuC,KAAZ,CAAkB,+CAAlB,EAAkE,sBAAlE;AACD,aAHD,MAKA;AACG,oBAAI,CAACvC,MAAL,CAAYuC,KAAZ,CAAkBZ,GAAG,CAACW,MAAtB,EAA6B,sBAA7B;;AACCV,qBAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACF,WAhBH;AAkBD;;;qCAEYO,I,EAAc;AAAA;;AACzB,eAAKnC,OAAL,CAAayC,uBAAb,GAAuChB,SAAvC,CACE,UAAAC,GAAG,EAAI;AACL,kBAAI,CAACY,SAAL,CAAeH,IAAf;;AACA,kBAAI,CAAClC,MAAL,CAAY0B,IAAZ,CAAiB,wBAAjB,EAA2C,mBAA3C;;AACA,kBAAI,CAAC3B,OAAL,CAAaE,WAAb;AACD,WALH,EAME,UAAA0B,GAAG,EAAI;AACL,gBAAGA,GAAG,CAACW,MAAJ,IAAc,GAAjB,EACA;AACE,oBAAI,CAACtC,MAAL,CAAYuC,KAAZ,CAAkB,4CAAlB,EAAgE,mBAAhE;AACD;;AACDX,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,WAZH;AAcD;;;gCAEI;AAEH,eAAKU,SAAL;AACD;;;iCAEQH,I,EAAc;AACrB,cAAG,KAAKnC,OAAL,CAAaI,QAAb,CAAsBK,OAAtB,IAAiC,CAApC,EACA;AACE,iBAAKiC,YAAL,CAAkBP,IAAlB;AACD,WAHD,MAKA;AACE,iBAAKQ,YAAL,CAAkBR,IAAlB;AACD;AACF;;;;;;;uBAjFUD,4B,EAA4B,gK,EAAA,yH;AAAA,K;;;YAA5BA,4B;AAA4B,+C;AAAA,e;AAAA,c;AAAA,6uE;AAAA;AAAA;;;ACXzC;;AAAwC;AAAA;;AAAA;;AAAA,mBAAU,IAAAU,QAAA,KAAV;AAAwB,WAAxB;;AACpC;;AACA;;AACE;;AAA6C;AAAA;AAAA;;AAA7C;;AAEF;;AACA;;AACE;;AAA2C;AAAA;AAAA;;AAA3C;;AAEF;;AACA;;AACI;;AAAqC;AAAA;AAAA;;AAArC;;AAEJ;;AACA;;AACI;;AAA+C;AAAA;AAAA;;AAA/C;;AAEJ;;AACA;;AACI;;AAAqC;AAAA;AAAA;;AAArC;;AAEJ;;AACA;;AACI;;AAA2C;AAAA;AAAA;;AAA3C;;AAEJ;;AACA;;AACI;;AAAiD;AAAA;AAAA;;AAAjD;;AAEJ;;AACA;;AACA;;AACE;;AAAmC;AAAA;AAAA;;AAAnC;;AAEF;;AACA;;AACE;;AAAqC;AAAA;AAAA;;AAArC;;AAEF;;AACA;;AACA;;AACE;;AAAyC;AAAA;AAAA;;AAAzC;;AAEF;;AACA;;AACI;;AAAqC;AAAA;AAAA;;AAArC;;AAEJ;;AACA;;AACI;;AAAyC;AAAA;AAAA;;AAAzC;;AAEJ;;AACA;;AACI;;AAA6C;AAAA;AAAA;;AAA7C;;AAEJ;;AACA;;AACI;;AAA0C;AAAA;AAAA;;AAA1C;;AAEJ;;AACA;;AACH;;AACG;;AAAyF;;AAAM;;AAC/F;;AACA;;AACE;;AAA2F;AAAA,mBAAS,IAAAR,KAAA,EAAT;AAAgB,WAAhB;;AAAkB;;AAAK;;AAClH;;AACF;;AACF;;;;;;AAnEsC;;AAAA;;AAEW;;AAAA;;AAIF;;AAAA;;AAIJ;;AAAA;;AAIU;;AAAA;;AAIV;;AAAA;;AAIM;;AAAA;;AAIM;;AAAA;;AAKhB;;AAAA;;AAIE;;AAAA;;AAKI;;AAAA;;AAIF;;AAAA;;AAII;;AAAA;;AAII;;AAAA;;AAIH;;AAAA;;AAKiB;;AAAA;;AAGI;;AAAA;;;;;;;;;sEDtD1DF,4B,EAA4B;cANxC,uDAMwC;eAN9B;AACTH,kBAAQ,EAAE,0BADD;AAETC,qBAAW,EAAE,uCAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAM8B,Q;;;;;;;;;;;;;;;;;;;;;;;;AEXzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaY,6B;AAEX,+CAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,6B;AAA6B,K;;;YAA7BA,6B;AAA6B,gD;AAAA,c;AAAA,a;AAAA,+G;AAAA;AAAA;ACV1C;;AACI;;AAAkC;;AAAsB;;AACxD;;AACA;;AACE;;AACE;;AACL;;AACE;;AACE;;AACF;;AACD;;AACA;;;;;;;;;sEDDSA,6B,EAA6B;cANzC,uDAMyC;eAN/B;AACTd,kBAAQ,EAAE,2BADD;AAETC,qBAAW,EAAE,wCAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAM+B,Q;;;;;;;;;;;;;;;;;;;;AEV1C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAcA,QAAMa,MAAM,GAAW,CACrB;AAACC,UAAI,EAAE,EAAP;AAAWC,eAAS,EAAE,kEAAtB;AAAqCC,eAAS,EAAE;AAAhD,KADqB,EAErB;AAACF,UAAI,EAAE,gBAAP;AAAyBC,eAAS,EAAE,+FAApC;AAA4DE,iBAAW,EAAC,CAAC,qEAAD;AAAxE,KAFqB,EAGrB;AAACH,UAAI,EAAE,OAAP;AAAgBC,eAAS,EAAE,qEAA3B;AAA2CE,iBAAW,EAAC,CAAC,qEAAD;AAAvD,KAHqB,EAIrB;AAACH,UAAI,EAAE,mBAAP;AAA4BC,eAAS,EAAE,wGAAvC;AAAkEE,iBAAW,EAAC,CAAC,qEAAD;AAA9E,KAJqB,EAKrB;AAACH,UAAI,EAAE,QAAP;AAAiBC,eAAS,EAAE,wEAA5B;AAA6CE,iBAAW,EAAC,CAAC,qEAAD;AAAzD,KALqB,EAMrB;AAACH,UAAI,EAAE,qBAAP;AAA8BC,eAAS,EAAE,+GAAzC;AAAsEE,iBAAW,EAAC,CAAC,qEAAD;AAAlF,KANqB,EAOrB;AAACH,UAAI,EAAE,uBAAP;AAAgCC,eAAS,EAAE,qHAA3C;AAA0EE,iBAAW,EAAC,CAAC,sEAAD;AAAtF,KAPqB,CAAvB;;QAcaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBK,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBN,MAArB,CAAD,CADD;AAERjD,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;AC5B7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQayD,Y;AAGX,4BAAoBC,MAApB,EAAoC;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AAFpB,aAAAC,KAAA,GAAQ,iCAAR;AAGC;;;;mCAEU;AAAA;;AAETC,gBAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,UAACC,KAAD,EAAW;AAC1C,gBAAIA,KAAK,CAACC,WAAN,IAAqBC,YAAzB,EAAuC;AAClC,kBAAIC,KAAK,GAAGD,YAAY,CAACE,OAAb,CAAqB,YAArB,CAAZ;;AACA,kBAAGD,KAAK,IAAIE,SAAZ,EAAuB;AACrB;AACA;AACAC,wBAAQ,CAACC,MAAT;;AACC,sBAAI,CAACX,MAAL,CAAYY,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACF;AACL;AACJ,WAVD;AAWD;;;;;;;uBAnBUb,Y,EAAY,uH;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,oH;AAAA;AAAA;ACRzB;;AACE;;AACA;;AACE;;AACA;;AACA;;AACF;;AACA;;AACE;;AACF;;AACF;;;;;;;;;sEDFaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTvB,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;AERzwG,CAEA;;;QAwEamC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAVT,CAAC,kFAAD,EAAsB,wFAAtB,EAA8C;AACvDC,eAAO,EAAE,sEAD8C;AAEvDC,gBAAQ,EAAE,yEAF6C;AAGvDC,aAAK,EAAE;AAHgD,OAA9C,EAKX,gGALW,EAMX,4FANW,EAOV,mEAPU,C;AAOG,gBAlBL,CACP,uEADO,EAEP,qEAFO,EAGP,0DAHO,EAIP,oEAJO,EAKP,kEALO,EAMP,6FANO,EAOP,wDAAanB,OAAb,CAAqB;AACnBoB,mBAAW,EAAE;AADM,OAArB,CAPO,CAkBK;;;;0HAGHJ,S,EAAS;AAAA,uBAtClB,2DAsCkB,EArClB,6EAqCkB,EApClB,kEAoCkB,EAnClB,+FAmCkB,EAlClB,4GAkCkB,EAjClB,0HAiCkB,EAhClB,yEAgCkB,EA/BlB,wHA+BkB,EA9BlB,yGA8BkB,EA7BlB,sIA6BkB,EA5BlB,sEA4BkB,EA3BlB,yEA2BkB,EA1BlB,qHA0BkB,EAzBlB,+GAyBkB,EAxBlB,wIAwBkB,EAvBlB,sJAuBkB;AAvBc,kBAGhC,uEAHgC,EAIhC,qEAJgC,EAKhC,0DALgC,EAMhC,oEANgC,EAOhC,kEAPgC,EAQhC,6FARgC,EAQT,uDARS;AAuBd,O;AAfK,K;;;;;sEAedA,S,EAAS;cAxCrB,sDAwCqB;eAxCZ;AACRK,sBAAY,EAAE,CACZ,2DADY,EAEZ,6EAFY,EAGZ,kEAHY,EAIZ,+FAJY,EAKZ,4GALY,EAMZ,0HANY,EAOZ,yEAPY,EAQZ,wHARY,EASZ,yGATY,EAUZ,sIAVY,EAWZ,sEAXY,EAYZ,yEAZY,EAaZ,qHAbY,EAcZ,+GAdY,EAeZ,wIAfY,EAgBZ,sJAhBY,CADN;AAmBRpB,iBAAO,EAAE,CACP,uEADO,EAEP,qEAFO,EAGP,0DAHO,EAIP,oEAJO,EAKP,kEALO,EAMP,6FANO,EAOP,wDAAaD,OAAb,CAAqB;AACnBoB,uBAAW,EAAE;AADM,WAArB,CAPO,CAnBD;AA8BRE,mBAAS,EAAE,CAAC,kFAAD,EAAsB,wFAAtB,EAA8C;AACvDL,mBAAO,EAAE,sEAD8C;AAEvDC,oBAAQ,EAAE,yEAF6C;AAGvDC,iBAAK,EAAE;AAHgD,WAA9C,EAKX,gGALW,EAMX,4FANW,EAOV,mEAPU,CA9BH;AAsCRI,mBAAS,EAAE,CAAC,2DAAD;AAtCH,S;AAwCY,Q;;;;;;;;;;;;;;;;;;AC1EtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,e;AAEX,+BAAoBrB,MAApB,EAA4CtD,MAA5C,EAAmE;AAAA;;AAA/C,aAAAsD,MAAA,GAAAA,MAAA;AAAwB,aAAAtD,MAAA,GAAAA,MAAA;AAC3C;;;;oCAGC4E,I,EACAC,K,EAA0B;AACxB,cAAGjB,YAAY,CAACE,OAAb,CAAqB,WAArB,KAAqC,IAArC,IACAF,YAAY,CAACE,OAAb,CAAqB,WAArB,KAAqC,YADxC,EACqD;AACrD,mBAAO,IAAP;AACD,WAHC,MAII;AACF,iBAAK9D,MAAL,CAAYuC,KAAZ,CAAkB,wEAAlB,EAA4F,YAA5F,EADE,CAEF;;AACA,mBAAO,KAAP;AACD;AACJ;;;;;;;uBAjBUoC,e,EAAe,8G,EAAA,gH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVG,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACR5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,c;AAEX,8BAAoBzB,MAApB,EAAoC;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AACnB;;;;oCAGCsB,I,EACAC,K,EAA0B;AACxB,cAAGjB,YAAY,CAACE,OAAb,CAAqB,OAArB,KAAiC,IAApC,EACF,OAAO,IAAP,CADE,KAEE;AACF,iBAAKR,MAAL,CAAYY,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACA,mBAAO,KAAP;AACD;AACF;;;;;;;uBAdUa,c,EAAc,8G;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVD,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaE,c;AAEX,8BAAoB1B,MAApB,EAAoC;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AACnB;;;;oCAGCsB,I,EACAC,K,EAA0B;AACxB,cAAGjB,YAAY,CAACE,OAAb,CAAqB,OAArB,KAAiC,IAApC,EACA,OAAO,IAAP,CADA,KAEI;AACF,iBAAKR,MAAL,CAAYY,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACA,mBAAO,KAAP;AACD;AACJ;;;;;;;uBAdUc,c,EAAc,8G;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVF,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYaG,gB;AAEX,gCAAoB3B,MAApB,EAAoC;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AAAkB;;;;kCAE5B4B,O,EAA2BN,I,EAAiB;AAAA;;AAEpD,cAAIhB,YAAY,CAACE,OAAb,CAAqB,OAArB,KAAiC,IAArC,EACA;AACE,gBAAMqB,SAAS,GAAGD,OAAO,CAACE,KAAR,CAAc;AAC9BC,qBAAO,EAAEH,OAAO,CAACG,OAAR,CAAgBC,GAAhB,CAAoB,eAApB,EAAqC,YAAY1B,YAAY,CAACE,OAAb,CAAqB,OAArB,CAAjD;AADqB,aAAd,CAAlB;AAIE,mBAAOc,IAAI,CAACW,MAAL,CAAYJ,SAAZ,EAAuBK,IAAvB,CACL,2DACI,UAAAC,IAAI,EAAI,CAAG,CADf,EAEI,UAAA9D,GAAG,EAAI;AACH,kBAAIA,GAAG,CAACW,MAAJ,IAAc,GAAlB,EAAsB;AAClBsB,4BAAY,CAAC8B,UAAb,CAAwB,OAAxB;;AACA,sBAAI,CAACpC,MAAL,CAAYqC,aAAZ,CAA0B,QAA1B;AACH;AACJ,aAPL,CADK,CAAP;AAWH,WAjBD,MAmBA;AACG,mBAAOf,IAAI,CAACW,MAAL,CAAYL,OAAO,CAACE,KAAR,EAAZ,CAAP;AACF;AACF;;;;;;;uBA5BUH,gB,EAAgB,8G;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB;;;;;sEAAhBA,gB,EAAgB;cAD5B;AAC4B,Q;;;;;;;;;;;;;;;;;;;;;;ACZ7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AAA2B;;AAAU;;;;;;;;AAInC;;AACE;;AAAI;;AAAwD;;AAC5D;;AAAI;;AAA0B;;AAC9B;;AAAI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAqC;;AAAG;;AAC5C;;AACE;;AAEA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0C;;AAC5C;;AACF;;;;;;AARM;;AAAA;;AACA;;AAAA;;;;QDGKW,yB;AAEX,yCAAmB7F,OAAnB,EAAwDC,MAAxD,EAA+E;AAAA;;AAA5D,aAAAD,OAAA,GAAAA,OAAA;AAAqC,aAAAC,MAAA,GAAAA,MAAA;AAA0B;;;;mCAE1E;AACN,eAAKD,OAAL,CAAaE,WAAb;AACD;;;qCAEYC,c,EAAgB;AAC3B,eAAKH,OAAL,CAAaI,QAAb,GAAwBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,cAAlB,CAAxB;AACD;;;iCACQ2F,Q,EAAU;AAAA;;AACjB,cAAItF,OAAO,CAAC,sCAAD,CAAX,EAAqD;AACnD,gBAAG,KAAKR,OAAL,CAAaI,QAAb,CAAsB2F,QAAtB,IAAkCD,QAArC,EACA;AACE,mBAAK9F,OAAL,CAAaI,QAAb,GAAwB;AACtB2F,wBAAQ,EAAC,CADa;AAEtBrF,yBAAS,EAAE,EAFW;AAGtBC,wBAAQ,EAAE,EAHY;AAItBK,2BAAW,EAAE,EAJS;AAKtBC,oBAAI,EAAE,EALgB;AAMtBC,qBAAK,EAAE,EANe;AAOtBC,uBAAO,EAAE;AAPa,eAAxB;AASD;;AACD,iBAAKnB,OAAL,CAAagG,kBAAb,CAAgCF,QAAhC,EACGrE,SADH,CACa,UAAAC,GAAG,EAAI;AAChB,oBAAI,CAACzB,MAAL,CAAY0B,IAAZ,CAAiB,wBAAjB,EAA2C,eAA3C;;AACA,oBAAI,CAAC3B,OAAL,CAAaE,WAAb;AACD,aAJH,EAKE,UAAA0B,GAAG,EAAI;AAAEC,qBAAO,CAACC,GAAR,CAAYF,GAAZ;AAAmB,aAL9B;AAMD;AACF;;;;;;;uBAhCUiE,yB,EAAyB,kJ,EAAA,yH;AAAA,K;;;YAAzBA,yB;AAAyB,6C;AAAA,c;AAAA,a;AAAA,6K;AAAA;AAAA;ACTtC;;AAGA;;AACE;;AAUF;;;;AAdK;;AAIC;;AAAA;;;;;;;;;sEDKOA,yB,EAAyB;cALrC,uDAKqC;eAL3B;AACT9D,kBAAQ,EAAE,wBADD;AAETC,qBAAW,EAAE,qCAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAK2B,Q;;;;;;;;;;;;;;;;;;;;;;;;AETtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWagE,qB;AAEX,qCAAmBjG,OAAnB,EAAwDC,MAAxD,EAA+E;AAAA;;AAA5D,aAAAD,OAAA,GAAAA,OAAA;AAAqC,aAAAC,MAAA,GAAAA,MAAA;AAA0B;;;;mCAEvE;AACT,eAAKqC,SAAL;AACD;;;kCAESH,I,EAAe;AACvB,cAAIA,IAAI,IAAI,IAAZ,EACEA,IAAI,CAACA,IAAL,CAAUC,KAAV;AACF,eAAKpC,OAAL,CAAaI,QAAb,GAAwB;AACtB2F,oBAAQ,EAAC,CADa;AAEtBrF,qBAAS,EAAE,EAFW;AAGtBC,oBAAQ,EAAE,EAHY;AAItBK,uBAAW,EAAE,EAJS;AAKtBC,gBAAI,EAAE,EALgB;AAMtBC,iBAAK,EAAE,EANe;AAOtBC,mBAAO,EAAE;AAPa,WAAxB;AASD;;;iCAEQgB,I,EAAc;AACrB,cAAG,KAAKnC,OAAL,CAAaI,QAAb,CAAsB2F,QAAtB,IAAkC,CAArC,EACA;AACE,iBAAKrD,YAAL,CAAkBP,IAAlB;AACD,WAHD,MAKA;AACE,iBAAKQ,YAAL,CAAkBR,IAAlB;AACD;AACF;;;gCACI;AAEH,eAAKG,SAAL;AACD;;;qCACYH,I,EAAc;AAAA;;AACzB,eAAKnC,OAAL,CAAakG,eAAb,GAA+BzE,SAA/B,CACE,UAAAC,GAAG,EAAI;AACL,kBAAI,CAACY,SAAL,CAAeH,IAAf;;AACA,kBAAI,CAAClC,MAAL,CAAY0B,IAAZ,CAAiB,wBAAjB,EAA2C,eAA3C;;AACA,kBAAI,CAAC3B,OAAL,CAAaE,WAAb;AACD,WALH,EAME,UAAA0B,GAAG,EAAI;AACL,gBAAGA,GAAG,CAACW,MAAJ,IAAc,GAAjB,EACA;AACE,oBAAI,CAACtC,MAAL,CAAYuC,KAAZ,CAAkB,+CAAlB,EAAkE,eAAlE;AACD,aAHD,MAKA;AACG,oBAAI,CAACvC,MAAL,CAAYuC,KAAZ,CAAkBZ,GAAG,CAACW,MAAtB,EAA6B,eAA7B;;AACCV,qBAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACF,WAhBH;AAkBD;;;qCAEYO,I,EAAc;AAAA;;AACzB,eAAKnC,OAAL,CAAamG,gBAAb,GAAgC1E,SAAhC,CACE,UAAAC,GAAG,EAAI;AACL,kBAAI,CAACY,SAAL,CAAeH,IAAf;;AACA,kBAAI,CAAClC,MAAL,CAAY0B,IAAZ,CAAiB,wBAAjB,EAA2C,YAA3C;;AACA,kBAAI,CAAC3B,OAAL,CAAaE,WAAb;AACD,WALH,EAME,UAAA0B,GAAG,EAAI;AACL,gBAAGA,GAAG,CAACW,MAAJ,IAAc,GAAjB,EACA;AACE,oBAAI,CAACtC,MAAL,CAAYuC,KAAZ,CAAkB,4CAAlB,EAAgE,YAAhE;AACD;;AACDX,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,WAZH;AAcD;;;;;;;uBAxEUqE,qB,EAAqB,kJ,EAAA,yH;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,e;AAAA,a;AAAA,8sC;AAAA;AAAA;;;ACXlC;;AAAwC;AAAA;;AAAA;;AAAA,mBAAU,IAAArD,QAAA,KAAV;AAAwB,WAAxB;;AACpC;;AACA;;AACE;;AAA6C;AAAA;AAAA;;AAA7C;;AAEF;;AACA;;AACE;;AAA2C;AAAA;AAAA;;AAA3C;;AAEF;;AACA;;AACE;;AAAiD;AAAA;AAAA;;AAAjD;;AAEF;;AACA;;AACA;;AACE;;AAAmC;AAAA;AAAA;;AAAnC;;AAEF;;AACA;;AACE;;AAAqC;AAAA;AAAA;;AAArC;;AAEF;;AACA;;AACA;;AACE;;AAAyC;AAAA;AAAA;;AAAzC;;AAEF;;AAAM;;AACT;;AACG;;AAAyF;;AAAM;;AAC/F;;AACA;;AACE;;AAA2F;AAAA,mBAAS,IAAAR,KAAA,EAAT;AAAgB,WAAhB;;AAAkB;;AAAK;;AAClH;;AACF;;AACF;;;;;;AAlCuC;;AAAA;;AAEU;;AAAA;;AAIF;;AAAA;;AAIM;;AAAA;;AAKd;;AAAA;;AAIE;;AAAA;;AAKI;;AAAA;;AAIoB;;AAAA;;AAGI;;AAAA;;;;;;;;;sEDrB1D6D,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTlE,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,gBAAM,EAAE,CAAC,+BAAD;AAHC,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEXlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUamE,sB;AAEX,wCAAc;AAAA;AAAG;;;;mCAEN,CACV;;;;;;;uBALUA,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,yC;AAAA,c;AAAA,a;AAAA,+G;AAAA;AAAA;ACVnC;;AACE;;AAAkC;;AAAe;;AACjD;;AACA;;AACE;;AACE;;AACL;;AACE;;AACE;;AACF;;AACD;;AACA;;;;;;;;;sEDDWA,sB,EAAsB;cAPlC,uDAOkC;eAPxB;AACTrE,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAOwB,Q;;;;;;;;;;;;;;;;;;;;AEVnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIQ;;AAA2B;;AAAU;;;;;;;;AAkBjC;;AACE;;AAEA;AAAA;;AAAA;;AAAA;;AAAA,iEAA8C,IAA9C;AAAkD,SAAlD;;AAAqD;;AACvD;;;;;;;;AACA;;AACI;;AAEA;AAAA;;AAAA;;AAAA;;AAAA,iEAA8C,KAA9C;AAAmD,SAAnD;;AAAsD;;AACxD;;;;;;AAfJ;;AACE;;AAAI;;AAAoC;;AACxC;;AAAI;;AAAmC;;AACvC;;AAAI;;AAAmC;;AACvC;;AAAI;;AAA+B;;AACnC;;AAAI;;AAAG;;AACP;;AAKA;;AAKF;;;;;;AAfM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;AAKA;;AAAA;;;;QDhBHoE,2B;AAEX,2CAAmBrG,OAAnB,EAA6DC,MAA7D,EAAoF;AAAA;;AAAjE,aAAAD,OAAA,GAAAA,OAAA;AAA0C,aAAAC,MAAA,GAAAA,MAAA;AAA0B;;;;mCAE/E;AACN,eAAKD,OAAL,CAAaE,WAAb;AACD;;;iCAEQoG,S,EAAmBC,Q,EAAiB;AAAA;;AACzC,eAAKvG,OAAL,CAAasG,SAAb,GAAyBA,SAAzB;AACA,eAAKtG,OAAL,CAAauG,QAAb,GAAwBA,QAAxB;AACA,eAAKvG,OAAL,CAAawG,oBAAb,GAAoC/E,SAApC,CACE,UAAAC,GAAG,EAAI;AACL,gBAAG6E,QAAH,EACA;AACE,oBAAI,CAACtG,MAAL,CAAY0B,IAAZ,CAAiB,wBAAjB,EAA2C,uBAA3C;AACD,aAHD,MAII;AACF,oBAAI,CAAC1B,MAAL,CAAY0B,IAAZ,CAAiB,wBAAjB,EAA2C,qBAA3C;AACD;;AACD,kBAAI,CAAC3B,OAAL,CAAaE,WAAb;AACD,WAVH,EAWE,UAAA0B,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,WAbH;AAeD;;;;;;;uBA1BQyE,2B,EAA2B,4J,EAAA,yH;AAAA,K;;;YAA3BA,2B;AAA2B,8C;AAAA,e;AAAA,a;AAAA,mR;AAAA;AAAA;ACXxC;;AACI;;AAAkC;;AAAa;;AAC/C;;AACA;;AACI;;AAEA;;AACI;;AACA;;AAAI;;AAAa;;AACjB;;AAAI;;AAAY;;AAChB;;AAAI;;AAAY;;AAChB;;AAAI;;AAAM;;AACV;;AACA;;AACA;;AACA;;AACF;;AAiBF;;AACJ;;AACA;;;;AA/BS;;AAAA;;AAYC;;AAAA;;;;;;;;;sEDLDA,2B,EAA2B;cANvC,uDAMuC;eAN7B;AACTtE,kBAAQ,EAAE,yBADD;AAETC,qBAAW,EAAE,sCAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAM6B,Q;;;;;;;;;;;;;;;;;;;;;;;;AEXxC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQawE,e;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,mF;AAAA;AAAA;ACR5B;;AACI;;AACI;;AACJ;;AACJ;;;;;;;;sEDIaA,e,EAAe;cAN3B,uDAM2B;eANjB;AACT1E,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAMiB,Q;;;;;;;;;;;;;;;;;;;;AER5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOayE,a;AAEX,+BAAc;AAAA;AAAG;;;;mCAMT;AACN,cAAG7C,YAAY,CAACE,OAAb,CAAqB,WAArB,KAAqC,IAAxC,EACA;AACE,iBAAK4C,SAAL,GAAiB9C,YAAY,CAACE,OAAb,CAAqB,WAArB,CAAjB;AACA,iBAAK6C,SAAL,GAAiB/C,YAAY,CAACE,OAAb,CAAqB,WAArB,CAAjB;AACA,iBAAKxD,OAAL,GAAesD,YAAY,CAACE,OAAb,CAAqB,SAArB,CAAf;AACD,WALD,MAOA;AACE,iBAAK4C,SAAL,GAAiB,IAAjB;AACA,iBAAKC,SAAL,GAAiB,IAAjB;AACA,iBAAKrG,OAAL,GAAe,IAAf;AACD;AACF;;;;;;;uBArBUmG,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,oD;AAAA;AAAA;ACP1B;;AACI;;AAAsB;;AAA0B;;AAChD;;AAAG;;AAA8B;;AACnC;;;;AAFwB;;AAAA;;;;;;;;sEDMbA,a,EAAa;cALzB,uDAKyB;eALf;AACT3E,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAca4E,c;AAOX,8BAAoB7G,OAApB,EAAmDuD,MAAnD,EAA2EtD,MAA3E,EAAkG;AAAA;;AAA9E,aAAAD,OAAA,GAAAA,OAAA;AAA+B,aAAAuD,MAAA,GAAAA,MAAA;AAAwB,aAAAtD,MAAA,GAAAA,MAAA;AAL3E,aAAA6G,SAAA,GAAY;AACV1F,eAAK,EAAE,EADG;AAEVC,mBAAS,EAAE;AAFD,SAAZ;AAKqG;;;;mCAE7F,CACP;;;iCAEQc,I,EAAc;AAAA;;AACrB,eAAKnC,OAAL,CAAa+G,KAAb,CAAmB5E,IAAI,CAAC6E,KAAxB,EAA+BvF,SAA/B,CACE,UAACC,GAAD,EAAc;AACZ,gBAAIuF,OAAO,GAAGvF,GAAG,CAACoC,KAAJ,CAAUoD,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAd;AACA,gBAAIC,kBAAkB,GAAG1D,MAAM,CAAC2D,IAAP,CAAYH,OAAZ,CAAzB;AACA,gBAAII,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWJ,kBAAX,CAArB;AAEA,gBAAI1G,OAAO,GAAG4G,cAAc,CAAC5G,OAA7B;AACA,gBAAI+G,SAAS,GAAGH,cAAc,CAACG,SAA/B;AACA,gBAAIC,SAAS,GAAGJ,cAAc,CAACI,SAA/B;AAEA5D,wBAAY,CAAC6D,OAAb,CAAqB,OAArB,EAA8BhG,GAAG,CAACoC,KAAlC;AACAD,wBAAY,CAAC6D,OAAb,CAAqB,SAArB,EAAgCjH,OAAhC;AACAoD,wBAAY,CAAC6D,OAAb,CAAqB,WAArB,EAAkCF,SAAlC;AACA3D,wBAAY,CAAC6D,OAAb,CAAqB,WAArB,EAAkCD,SAAlC;AAEAxD,oBAAQ,CAACC,MAAT,GAdY,CAeb;AACA,WAjBH,EAkBE,UAAAtC,GAAG,EAAI;AACL,gBAAIA,GAAG,CAACW,MAAJ,IAAc,GAAlB,EACE,OAAI,CAACtC,MAAL,CAAYuC,KAAZ,CAAkB,iCAAlB,EAAqD,wBAArD,EADF,KAGEX,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,WAvBH;AAyBD;;;;;;;uBAtCUiF,c,EAAc,mI,EAAA,uH,EAAA,yH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,uhB;AAAA;AAAA;;;ACd3B;;AACI;;AACI;;AACE;;AAAwC;AAAA;;AAAA;;AAAA,mBAAU,IAAAjE,QAAA,KAAV;AAAwB,WAAxB;;AACtC;;AACA;;AACE;;AAA0D;AAAA;AAAA;;AAA1D;;AACF;;AACA;;AACA;;AACA;;AACG;;AAAkF;AAAA;AAAA;;AAAlF;;AACH;;AACA;;AACA;;AACC;;AACG;;AAAyF;;AAAK;;AAChG;;AACF;;AACF;;AACA;;AACF;;AACR;;;;;;AAhBwE;;AAAA;;AAKyB;;AAAA;;AAKlB;;AAAA;;;;;;;;;sEDFlEiE,c,EAAc;cAN1B,uDAM0B;eANhB;AACT9E,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAMgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEd3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWa0F,e;AAEX,+BAAoBpE,MAApB,EAAoC;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AAAmB;;;;mCAE/B;AACNM,sBAAY,CAAC8B,UAAb,CAAwB,OAAxB;AACA9B,sBAAY,CAAC8B,UAAb,CAAwB,WAAxB;AACA9B,sBAAY,CAAC8B,UAAb,CAAwB,SAAxB;AACA9B,sBAAY,CAAC8B,UAAb,CAAwB,WAAxB;AACA1B,kBAAQ,CAACC,MAAT,GALM,CAMP;AACC;AACD;;;;;;;uBAZUyD,e,EAAe,uH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,6D;AAAA;;;;;sEAAfA,e,EAAe;cAN3B,uDAM2B;eANjB;AACT5F,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAMiB,Q;;;;;;;;;;;;;;;;;;;;;;ACX5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC4BY;;AACA;;AACA;;AACI;;AAAiE;;AAAM;;AAC3E;;AACA;;AACE;;AAAoE;;AAAS;;AACjF;;AACA;;AACE;;AAAsE;;AAAY;;AACtF;;AACA;;AACE;;AAAwE;;AAAc;;AAC1F;;AACE;;AACE;;AAAyD;;AAAM;;AACnE;;AACA;;AACF;;;;AAhB8B;;AAAA;;AACY;;AAAA;;AAEZ;;AAAA;;AACU;;AAAA;;AAEZ;;AAAA;;AACU;;AAAA;;AAEZ;;AAAA;;AACU;;AAAA;;AAEV;;AAAA;;AACU;;AAAA;;;;;;;;;;AAIpC;;AACA;;AACE;;AACE;;AAAwD;;AAAK;;AACjE;;AACM;;AACF;;;;AAJoB;;AAAA;;AACU;;AAAA;;;;;;;;;;;;;;;;;;;;QD3CzB2F,gB;AAEX,kCAAc;AAAA;;AAEd,aAAAC,UAAA,GAAa,KAAb;AACA,aAAAC,aAAA,GAAgB,KAAhB;AAHiB;;;;mCAKN;AACT,eAAKD,UAAL,GAAkB,KAAlB;AACD;;;iCAEQ;AACP,eAAKA,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AACD;;;mCAEO;AACN,cAAGhE,YAAY,CAACE,OAAb,CAAqB,OAArB,KAAiC,IAApC,EACA;AACE,iBAAK+D,aAAL,GAAqB,IAArB;AACD;AACF;;;;;;;uBApBUF,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,mC;AAAA,e;AAAA,c;AAAA,0pB;AAAA;AAAA;ACP7B;;AACI;;AAGE;;AACE;;AAA6C;;AAAqB;;AAClE;;AAOE;AAAA,mBAAS,IAAAG,MAAA,EAAT;AAAiB,WAAjB;;AAEA;;AACF;;AACA;;AAIE;;AACE;;AAGE;;AAAmD;;AAAI;;AACzD;;AACF;;AACE;;AAmBR;;AAOI;;AACF;;AACF;;AACF;;;;AApD8B;;AAAA;;AAOtB;;AAAA;;AAOA;;AAAA;;AAIM;;AAAA,+JAAoC,yBAApC,EAAoC,sEAApC;;AAE4B;;AAAA;;AAG3B;;AAAA;;AAmBR;;AAAA;;;;;;;;;sEDxCIH,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACT7F,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTgG,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;AEP7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AAA2B;;AAAU;;;;;;;;AAInC;;AACE;;AAAI;;AAAmC;;AACvC;;AAAI;;AAA0B;;AAC9B;;AAAI;;AAA6B;;AACjC;;AAAI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwC;;AAAG;;AAC/C;;AACE;;AAEA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgD;;AAClD;;AACF;;;;;;AATM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;QDEKC,4B;AAEX,4CAAmBjI,OAAnB,EAAoD;AAAA;;AAAjC,aAAAA,OAAA,GAAAA,OAAA;AAAoC;;;;mCAE/C;AACN,eAAKA,OAAL,CAAaE,WAAb;AACD;;;qCAEYC,c,EAAgB;AAC3B,eAAKH,OAAL,CAAaI,QAAb,GAAwBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,cAAlB,CAAxB;AACD;;;iCAEQ+H,W,EAAa;AAAA;;AACpB,cAAI1H,OAAO,CAAC,sCAAD,CAAX,EAAqD;AACnD,gBAAG,KAAKR,OAAL,CAAaI,QAAb,CAAsB+H,WAAtB,IAAqCD,WAAxC,EACA;AACE,mBAAKlI,OAAL,CAAaI,QAAb,GAAwB;AACtB+H,2BAAW,EAAC,CADU;AAEtBC,6BAAa,EAAE,EAFO;AAGtBnH,oBAAI,EAAE,EAHgB;AAItBC,qBAAK,EAAE,EAJe;AAKtBC,uBAAO,EAAE;AALa,eAAxB;AAOD;;AACD,iBAAKnB,OAAL,CAAaqI,qBAAb,CAAmCH,WAAnC,EACGzG,SADH,CACa,UAAAC,GAAG,EAAI;AAChB,qBAAI,CAAC1B,OAAL,CAAaE,WAAb;AAED,aAJH,EAKE,UAAA0B,GAAG,EAAI;AAAEC,qBAAO,CAACC,GAAR,CAAYF,GAAZ;AAAmB,aAL9B;AAMD;AACF;;;;;;;uBA/BUqG,4B,EAA4B,wJ;AAAA,K;;;YAA5BA,4B;AAA4B,gD;AAAA,c;AAAA,a;AAAA,6K;AAAA;AAAA;ACTzC;;AAGA;;AACE;;AAWF;;;;AAfK;;AAIC;;AAAA;;;;;;;;;sEDKOA,4B,EAA4B;cANxC,uDAMwC;eAN9B;AACTlG,kBAAQ,EAAE,2BADD;AAETC,qBAAW,EAAE,wCAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAM8B,Q;;;;;;;;;;;;;;;;;;;;;;AETzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaqG,wB;AAEX,wCAAmBtI,OAAnB,EAAoD;AAAA;;AAAjC,aAAAA,OAAA,GAAAA,OAAA;AAAoC;;;;mCAE/C;AACN,eAAKsC,SAAL;AACD;;;kCAESH,I,EAAe;AACvB,cAAIA,IAAI,IAAI,IAAZ,EACEA,IAAI,CAACA,IAAL,CAAUC,KAAV;AACF,eAAKpC,OAAL,CAAaI,QAAb,GAAwB;AACtB+H,uBAAW,EAAC,CADU;AAEtBC,yBAAa,EAAC,EAFQ;AAGtBnH,gBAAI,EAAE,EAHgB;AAItBC,iBAAK,EAAE,EAJe;AAKtBC,mBAAO,EAAE;AALa,WAAxB;AAOD;;;iCAEQgB,I,EAAc;AACrB,cAAG,KAAKnC,OAAL,CAAaI,QAAb,CAAsB+H,WAAtB,IAAqC,CAAxC,EACA;AACE,iBAAKzF,YAAL,CAAkBP,IAAlB;AACD,WAHD,MAKA;AACE,iBAAKQ,YAAL,CAAkBR,IAAlB;AACD;AACF;;;qCAEYA,I,EAAc;AAAA;;AACzB,eAAKnC,OAAL,CAAauI,kBAAb,GAAkC9G,SAAlC,CACE,UAAAC,GAAG,EAAI;AACL,mBAAI,CAACY,SAAL,CAAeH,IAAf,EADK,CAEN;;;AACC,mBAAI,CAACnC,OAAL,CAAaE,WAAb;AACD,WALH,EAME,UAAA0B,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,WARH;AAUD;;;qCAEYO,I,EAAc;AAAA;;AACzB,eAAKnC,OAAL,CAAawI,mBAAb,GAAmC/G,SAAnC,CACE,UAAAC,GAAG,EAAI;AACL,mBAAI,CAACY,SAAL,CAAeH,IAAf;;AACA,mBAAI,CAACnC,OAAL,CAAaE,WAAb;AACD,WAJH,EAKE,UAAA0B,GAAG,EAAI;AAAEC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AAAmB,WAL9B;AAOD;;;gCAEI;AAEH,eAAKU,SAAL;AACD;;;;;;;uBAzDUgG,wB,EAAwB,wJ;AAAA,K;;;YAAxBA,wB;AAAwB,2C;AAAA,e;AAAA,a;AAAA,s7B;AAAA;AAAA;;;ACVrC;;AAAwC;AAAA;;AAAA;;AAAA,mBAAU,IAAA1F,QAAA,KAAV;AAAwB,WAAxB;;AACpC;;AACA;;AACE;;AAAiD;AAAA;AAAA;;AAAjD;;AAEF;;AACA;;AACA;;AACE;;AAAmC;AAAA;AAAA;;AAAnC;;AAEF;;AACA;;AACE;;AAAqC;AAAA;AAAA;;AAArC;;AAEF;;AACA;;AACA;;AACE;;AAAyC;AAAA;AAAA;;AAAzC;;AAEF;;AAAM;;AACT;;AACG;;AAAyF;;AAAM;;AAC/F;;AACA;;AACE;;AAA2F;AAAA,mBAAS,IAAAR,KAAA,EAAT;AAAgB,WAAhB;;AAAkB;;AAAK;;AAClH;;AACF;;AACF;;;;;;AA1B0C;;AAAA;;AAEW;;AAAA;;AAKd;;AAAA;;AAIE;;AAAA;;AAKI;;AAAA;;AAIoB;;AAAA;;AAGI;;AAAA;;;;;;;;;sEDd1DkG,wB,EAAwB;cANpC,uDAMoC;eAN1B;AACTvG,kBAAQ,EAAE,sBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAM0B,Q;;;;;;;;;;;;;;;;;;;;;;AEVrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQawG,yB;AAEX,2CAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,yB;AAAyB,K;;;YAAzBA,yB;AAAyB,4C;AAAA,c;AAAA,a;AAAA,+G;AAAA;AAAA;ACRtC;;AACI;;AAAkC;;AAAkB;;AACpD;;AACA;;AACE;;AACE;;AACL;;AACE;;AACE;;AACF;;AACD;;AACA;;;;;;;;;sEDHSA,yB,EAAyB;cANrC,uDAMqC;eAN3B;AACT1G,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAM2B,Q;;;;;;;;;;;;;;;;;;;;AERtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOayG,0B;AAMX,0CAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAHX,aAAAC,OAAA,GAAU,0BAAV;AAGgC;;;;kDAEf;AACxB,iBAAO,KAAKD,IAAL,CAAUE,IAAV,CAAe,KAAKD,OAAL,GAAe,oBAA9B,EAAoD,KAAKxI,QAAzD,CAAP;AACD;;;iDACwB;AACvB,iBAAO,KAAKuI,IAAL,CAAUG,GAAV,CAAc,KAAKF,OAAL,GAAe,qBAAf,GAAuC,KAAKxI,QAAL,CAAcK,OAAnE,EAA4E,KAAKL,QAAjF,CAAP;AACD;;;kDACyBN,E,EAAI;AAC5B,iBAAO,KAAK6I,IAAL,WAAiB,KAAKC,OAAL,GAAe,qBAAf,GAAuC9I,EAAxD,CAAP;AACD;;;sCAEa;AAAA;;AACZ,eAAK6I,IAAL,CAAUI,GAAV,CAAc,KAAKH,OAAL,GAAe,oBAA7B,EACGI,SADH,GAEGzJ,IAFH,CAEQ,UAAAmC,GAAG;AAAA,mBAAI,OAAI,CAACuH,IAAL,GAAYvH,GAAhB;AAAA,WAFX;AAGD;;;;;;;uBAtBUgH,0B,EAA0B,uH;AAAA,K;;;aAA1BA,0B;AAA0B,eAA1BA,0BAA0B,K;AAAA,kBAFzB;;;;;sEAEDA,0B,EAA0B;cAHtC,wDAGsC;eAH3B;AACV3D,oBAAU,EAAE;AADF,S;AAG2B,Q;;;;;;;;;;;;;;;;;;;;;;ACPvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOamE,mB;AAMX,mCAAoBP,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAHX,aAAAC,OAAA,GAAU,0BAAV;AAGgC;;;;2CAEtB;AACjB,iBAAO,KAAKD,IAAL,CAAUE,IAAV,CAAe,KAAKD,OAAL,GAAe,aAA9B,EAA6C,KAAKxI,QAAlD,CAAP;AACD;;;0CACiB;AAChB,iBAAO,KAAKuI,IAAL,CAAUG,GAAV,CAAc,KAAKF,OAAL,GAAe,cAAf,GAAgC,KAAKxI,QAAL,CAAc2F,QAA5D,EAAsE,KAAK3F,QAA3E,CAAP;AACD;;;2CACkBN,E,EAAI;AACrB,iBAAO,KAAK6I,IAAL,WAAiB,KAAKC,OAAL,GAAe,cAAf,GAAgC9I,EAAjD,CAAP;AACD;;;sCAEa;AAAA;;AACZ,eAAK6I,IAAL,CAAUI,GAAV,CAAc,KAAKH,OAAL,GAAe,aAA7B,EACGI,SADH,GAEGzJ,IAFH,CAEQ,UAAAmC,GAAG;AAAA,mBAAI,OAAI,CAACuH,IAAL,GAAYvH,GAAhB;AAAA,WAFX;AAGD;;;;;;;uBAtBUwH,mB,EAAmB,uH;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFlB;;;;;sEAEDA,mB,EAAmB;cAH/B,wDAG+B;eAHpB;AACVnE,oBAAU,EAAE;AADF,S;AAGoB,Q;;;;;;;;;;;;;;;;;;;;;;ACPhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaoE,wB;AAOX,wCAAoBR,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAJX,aAAAC,OAAA,GAAU,0BAAV;AAIgC;;;;+CAElB;AACrB,iBAAO,KAAKD,IAAL,CAAUG,GAAV,CAAc,KAAKF,OAAL,GAAe,eAAf,GAAiC,KAAKtC,SAApD,EAA+D,KAAKC,QAApE,CAAP;AACD;;;sCAEa;AAAA;;AACZ,eAAKoC,IAAL,CAAUI,GAAV,CAAc,KAAKH,OAAL,GAAe,cAA7B,EACGI,SADH,GAEGzJ,IAFH,CAEQ,UAAAmC,GAAG;AAAA,mBAAI,OAAI,CAACuH,IAAL,GAAYvH,GAAhB;AAAA,WAFX;AAGD;;;;;;;uBAjBUyH,wB,EAAwB,uH;AAAA,K;;;aAAxBA,wB;AAAwB,eAAxBA,wBAAwB,K;AAAA,kBAFvB;;;;;sEAEDA,wB,EAAwB;cAHpC,wDAGoC;eAHzB;AACVpE,oBAAU,EAAE;AADF,S;AAGyB,Q;;;;;;;;;;;;;;;;;;;;;;ACRrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaqE,Y;AAEX,4BAAoBC,EAApB,EAA6CV,IAA7C,EAA+D;AAAA;;AAA3C,aAAAU,EAAA,GAAAA,EAAA;AAAyB,aAAAV,IAAA,GAAAA,IAAA;AAEpC,aAAAW,OAAA,GAAU,0BAAV;AAET,aAAAxC,SAAA,GAAY,KAAKuC,EAAL,CAAQE,KAAR,CAAc;AACxBnI,eAAK,EAAE,CAAC,EAAD,EAAK,0DAAWoI,QAAhB,CADiB;AAExBC,oBAAU,EAAE,CAAC,EAAD,EAAK,0DAAWD,QAAhB;AAFY,SAAd,CAAZ;AAJkE;;;;8BAU5DpJ,Q,EAAU;AACd,iBAAO,KAAKuI,IAAL,CAAUE,IAAV,CAAe,KAAKS,OAAL,GAAe,WAA9B,EAA2ClJ,QAA3C,CAAP;AACD;;;;;;;uBAdUgJ,Y,EAAY,kH,EAAA,uH;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACVrE,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;;;;;ACPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa2E,sB;AAMX,sCAAoBf,IAApB,EAAoC;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AAHX,aAAAC,OAAA,GAAU,0BAAV;AAGiC;;;;8CAEpB;AACpB,iBAAO,KAAKD,IAAL,CAAUE,IAAV,CAAe,KAAKD,OAAL,GAAe,gBAA9B,EAAgD,KAAKxI,QAArD,CAAP;AACD;;;6CACoB;AACnB,iBAAO,KAAKuI,IAAL,CAAUG,GAAV,CAAc,KAAKF,OAAL,GAAe,iBAAf,GAAmC,KAAKxI,QAAL,CAAc+H,WAA/D,EAA4E,KAAK/H,QAAjF,CAAP;AACD;;;8CACqBN,E,EAAI;AACxB,iBAAO,KAAK6I,IAAL,WAAiB,KAAKC,OAAL,GAAe,iBAAf,GAAmC9I,EAApD,CAAP;AACD;;;sCAEa;AAAA;;AACZ,eAAK6I,IAAL,CAAUI,GAAV,CAAc,KAAKH,OAAL,GAAe,gBAA7B,EACGI,SADH,GAEGzJ,IAFH,CAEQ,UAAAmC,GAAG;AAAA,mBAAI,OAAI,CAACuH,IAAL,GAAYvH,GAAhB;AAAA,WAFX;AAGD;;;;;;;uBAtBUgI,sB,EAAsB,uH;AAAA,K;;;aAAtBA,sB;AAAsB,eAAtBA,sBAAsB,K;AAAA,kBAFrB;;;;;sEAEDA,sB,EAAsB;cAHlC,wDAGkC;eAHvB;AACV3E,oBAAU,EAAE;AADF,S;AAGuB,Q;;;;;;;;;;;;;;;;;;;;;;ACPnC;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM4E,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAjI,GAAG;AAAA,aAAIC,OAAO,CAACW,KAAR,CAAcZ,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {AdministratorDetailService} from './../../shared/administrator-detail.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-administrator-detail-list',\n  templateUrl: './administrator-detail-list.component.html',\n  styles: [\n  ]\n})\nexport class AdministratorDetailListComponent implements OnInit {\n\n  constructor(public service: AdministratorDetailService, public toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.service.refreshList();\n  }\n\n  populateForm(selectedRecord) {\n    this.service.formData = Object.assign({}, selectedRecord);\n  }\n\n  onDelete(adminId) {\n    if (confirm('Are you sure to delete this record ?')) {\n      if(this.service.formData.AdminId == adminId)\n      {\n        this.service.formData = {\n          AdminId: 0,\n          FirstName: '',\n          LastName: '',\n          Nidno: '',\n          PassportNo: '',\n          Email: '',\n          MobileNo: '',\n          HomeAddress: '',\n          City: '',\n          State: '',\n          Country: '',\n          Uname: '',\n          Upassword: '',\n          AccountStatus: '',\n          AdminLevel: -1\n        }\n      }\n      this.service.deleteAdministratorDetail(adminId)\n        .subscribe(res => {\n          this.toastr.info('Submitted successfully', 'Administrator Delete');\n          this.service.refreshList();\n        },\n        err => { console.log(err); })\n    }\n  }\n\n\n}\n","<div *ngIf=\"!service.list\">Loading...</div>\n\n<table class=\"table table-hoverng table-sm\">\n  <tr *ngFor=\"let  administratorDetail of service.list\">\n    <td>{{ administratorDetail.FirstName }} {{ administratorDetail.LastName }}</td>\n    <td (click)=\"populateForm(administratorDetail)\">...</td>\n    <td>\n      <i \n      class=\"far fa-trash-alt fa-lg text-danger\" \n      (click)=\"onDelete(administratorDetail.AdminId)\"></i>\n    </td>\n  </tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport {AdministratorDetailService} from './../../shared/administrator-detail.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-administrator-detail',\n  templateUrl: './administrator-detail.component.html',\n  styles: [\n  ]\n})\nexport class AdministratorDetailComponent implements OnInit {\n\n  constructor(public service: AdministratorDetailService, public toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null)\n      form.form.reset();\n    this.service.formData = {\n      AdminId: 0,\n          FirstName: '',\n          LastName: '',\n          Nidno: '',\n          PassportNo: '',\n          Email: '',\n          MobileNo: '',\n          HomeAddress: '',\n          City: '',\n          State:'',\n          Country: '',\n          Uname: '',\n          Upassword: '',\n          AccountStatus: '',\n          AdminLevel: -1\n    }\n  }\n\n  updateRecord(form: NgForm) {\n    this.service.putAdministratorDetail().subscribe(\n      res => {\n        this.resetForm(form);\n        this.toastr.info('Submitted successfully', 'Administrator Update');\n        this.service.refreshList();\n      },\n      err => {\n        if(err.status == 403)\n        {\n          this.toastr.error(\"You are not authorized to perform this action\",\"Administrator Update\");\n        }\n        else\n        {\n           this.toastr.error(err.status,\"Administrator Update\");\n            console.log(err);\n        }\n      }\n    )\n  }\n\n  insertRecord(form: NgForm) {\n    this.service.postAdministratorDetail().subscribe(\n      res => {\n        this.resetForm(form);\n        this.toastr.info('Submitted successfully', 'New Administrator');\n        this.service.refreshList();\n      },\n      err => { \n        if(err.status == 403)\n        {\n          this.toastr.error(\"You are not authorized perform this action\", \"New Administrator\");\n        }\n        console.log(err); \n      }\n    )\n  }\n\n  reset()\n  {\n    this.resetForm();\n  }\n\n  onSubmit(form: NgForm) {\n    if(this.service.formData.AdminId == 0)\n    {\n      this.insertRecord(form);\n    }\n    else\n    {\n      this.updateRecord(form);\n    }\n  }\n\n}\n","<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n    <input type=\"hidden\" name=\"AdminId\" [value]=\"service.formData.AdminId\">\n    <div class=\"form-group\">\n      <input name=\"FirstName\" #FirstName=\"ngModel\" [(ngModel)]=\"service.formData.FirstName\" class=\"form-control\"\n             placeholder=\"First Name\" required>\n    </div>\n    <div class=\"form-group\">\n      <input name=\"LastName\" #LastName=\"ngModel\" [(ngModel)]=\"service.formData.LastName\" class=\"form-control\"\n             placeholder=\"Last Name\" required>\n    </div>\n    <div class=\"form-group\">\n        <input name=\"Nidno\" #Nidno=\"ngModel\" [(ngModel)]=\"service.formData.Nidno\" class=\"form-control\"\n                placeholder=\"NID No\" required>\n    </div>\n    <div class=\"form-group\">\n        <input name=\"PassportNo\" #PassportNo=\"ngModel\" [(ngModel)]=\"service.formData.PassportNo\" class=\"form-control\"\n                placeholder=\"Passport No\" required>\n    </div>\n    <div class=\"form-group\">\n        <input name=\"Email\" #Email=\"ngModel\" [(ngModel)]=\"service.formData.Email\" class=\"form-control\"\n                placeholder=\"Email Address\" required>\n    </div>\n    <div class=\"form-group\">\n        <input name=\"MobileNo\" #MobileNo=\"ngModel\" [(ngModel)]=\"service.formData.MobileNo\" class=\"form-control\"\n              placeholder=\"Mobile No\" required>\n    </div>\n    <div class=\"form-group\">\n        <input name=\"HomeAddress\" #HomeAddress=\"ngModel\" [(ngModel)]=\"service.formData.HomeAddress\" class=\"form-control\"\n               placeholder=\"Home Address\" required>\n    </div>\n    <div class=\"form-row\">\n    <div class=\"form-group col-md-5\">\n      <input name=\"City\" #City=\"ngModel\" [(ngModel)]=\"service.formData.City\" class=\"form-control\"\n             placeholder=\"City\" required>\n    </div>\n    <div class=\"form-group col-md-7\">\n      <input name=\"State\" #State=\"ngModel\" [(ngModel)]=\"service.formData.State\" class=\"form-control\"\n             placeholder=\"State\" required>\n    </div>\n    </div>\n    <div class=\"form-group\">\n      <input name=\"Country\" #Country=\"ngModel\" [(ngModel)]=\"service.formData.Country\" class=\"form-control\"\n             placeholder=\"country\" required>\n    </div>\n    <div class=\"form-group\">\n        <input name=\"Uname\" #Uname=\"ngModel\" [(ngModel)]=\"service.formData.Uname\" class=\"form-control\"\n               placeholder=\"user name\" required>\n    </div>\n    <div class=\"form-group\">\n        <input name=\"Upassword\" #Uname=\"ngModel\" [(ngModel)]=\"service.formData.Upassword\" class=\"form-control\"\n               placeholder=\"password\" required>\n    </div>\n    <div class=\"form-group\">\n        <input name=\"AccountStatus\" #Uname=\"ngModel\" [(ngModel)]=\"service.formData.AccountStatus\" class=\"form-control\"\n               placeholder=\"Account Status\" required>\n    </div>\n    <div class=\"form-group\">\n        <input name=\"AdminLevel\" #Uname=\"ngModel\" [(ngModel)]=\"service.formData.AdminLevel\" class=\"form-control\"\n               placeholder=\"Admin Level\" required>\n    </div>\n    <div class=\"form-row\">\n <div class=\"form-group col-md-7\">\n    <button class=\"btn btn-primary btn-sm btn-block\" type=\"submit\" [disabled]=\"form.invalid\">Submit</button>\n    </div>\n    <div class=\"form-group col-md-5\">\n      <button class=\"btn btn-secondary btn-sm btn-block\" type=\"button\" [disabled]=\"form.invalid\" (click)=\"reset()\">Clear</button>\n      </div>  \n    </div>\n  </form>\n","import { Component, OnInit } from '@angular/core';\nimport {AdministratorDetailService} from './../shared/administrator-detail.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-administrator-details',\n  templateUrl: './administrator-details.component.html',\n  styles: [\n  ]\n})\nexport class AdministratorDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron\">\r\n    <h1 class=\"display-3 text-center\">Administrator Register</h1>\r\n    <hr>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-7\">\r\n        <app-administrator-detail></app-administrator-detail>\r\n   </div>\r\n     <div class=\"col-md-5\">\r\n       <app-administrator-detail-list></app-administrator-detail-list>\r\n     </div>\r\n    </div>\r\n    </div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AuthorDetailsComponent } from './author-details/author-details.component';\nimport { PublisherDetailsComponent } from './publisher-details/publisher-details.component';\nimport { LoginComponent } from './login/login.component';\nimport { TokenAuthGuard } from './auth/token-auth.guard';\nimport { SuperadminGuard } from './auth/superadmin.guard';\nimport { LogoutComponent } from './logout/logout.component';\nimport { TokenNullGuard } from './auth/token-null.guard';\nimport {BookrequestDetailsComponent} from './bookrequest-details/bookrequest-details.component';\nimport {AdministratorDetailsComponent} from './administrator-details/administrator-details.component';\n\n\nconst routes: Routes = [\n  {path: \"\", component: HomeComponent, pathMatch: \"full\"},\n  {path: \"author-details\", component: AuthorDetailsComponent, canActivate:[TokenAuthGuard]},\n  {path: \"login\", component: LoginComponent, canActivate:[TokenNullGuard]},\n  {path: \"publisher-details\", component: PublisherDetailsComponent, canActivate:[TokenAuthGuard]},\n  {path: \"logout\", component: LogoutComponent, canActivate:[TokenAuthGuard]},\n  {path: \"bookrequest-details\", component: BookrequestDetailsComponent, canActivate:[TokenAuthGuard]},\n  {path: \"administrator-details\", component: AdministratorDetailsComponent, canActivate:[SuperadminGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit} from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styles: []\n})\nexport class AppComponent implements OnInit {\n  title = 'LibraryManagementAdministration';\n\n  constructor(private router: Router) {\n  }\n\n  ngOnInit() {\n\n    window.addEventListener('storage', (event) => {\n        if (event.storageArea == localStorage) {\n             let token = localStorage.getItem('token_name');\n             if(token == undefined) { \n               // Perform logout\n               //Navigate to login/home\n               location.reload();\n                this.router.navigate(['']); \n             }\n        }\n    });\n  }\n\n}\n","<body>\n  <app-nav-menu></app-nav-menu>\n  <div class=\"container\">\n    <main role=\"main\" class=\"flex-column min-vh-100\">\n    <router-outlet></router-outlet>\n    </main>\n  </div>\n  <div class=\"footer mt-auto py-3\">\n    <app-footer></app-footer>\n  </div>\n</body>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n//import { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ToastrModule } from 'ngx-toastr';\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthorDetailsComponent } from './author-details/author-details.component';\nimport { AuthorDetailComponent } from './author-details/author-detail/author-detail.component';\nimport { AuthorDetailListComponent } from './author-details/author-detail-list/author-detail-list.component';\nimport {AuthorDetailService} from './shared/author-detail.service';\nimport { FooterComponent } from './footer/footer.component';\nimport { PublisherDetailComponent } from './publisher-details/publisher-detail/publisher-detail.component';\nimport { PublisherDetailsComponent } from './publisher-details/publisher-details.component';\nimport { PublisherDetailListComponent } from './publisher-details/publisher-detail-list/publisher-detail-list.component';\nimport { PublisherDetailService } from './shared/publisher-detail.service';\nimport { LoginComponent } from './login/login.component';\nimport { LoginService } from './shared/login.service';\nimport { LogoutComponent } from './logout/logout.component';\nimport { TokenInterceptor } from './auth/token.interceptor';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AdministratorDetailsComponent } from './administrator-details/administrator-details.component';\nimport { BookrequestDetailsComponent } from './bookrequest-details/bookrequest-details.component';\nimport { AdministratorDetailService } from './shared/administrator-detail.service';\nimport { BookrequestDetailService } from './shared/bookrequest-detail.service';\nimport { AdministratorDetailComponent } from './administrator-details/administrator-detail/administrator-detail.component';\nimport { AdministratorDetailListComponent } from './administrator-details/administrator-detail-list/administrator-detail-list.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavMenuComponent,\n    HomeComponent,\n    AuthorDetailsComponent,\n    AuthorDetailComponent,\n    AuthorDetailListComponent,\n    FooterComponent,\n    PublisherDetailComponent,\n    PublisherDetailsComponent,\n    PublisherDetailListComponent,\n    LoginComponent,\n    LogoutComponent,\n    AdministratorDetailsComponent,\n    BookrequestDetailsComponent,\n    AdministratorDetailComponent,\n    AdministratorDetailListComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot({\n      progressBar: true\n    }),\n  ],\n  providers: [AuthorDetailService, PublisherDetailService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptor,\n    multi: true\n  },\n  AdministratorDetailService,\n  BookrequestDetailService,\n   LoginService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SuperadminGuard implements CanActivate {\n\n  constructor(private router: Router, private toastr: ToastrService) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n      if(localStorage.getItem('AdminRole') != null \n      && localStorage.getItem('AdminRole') == 'SuperAdmin'){\n      return true;\n    }\n      else{\n        this.toastr.error(\"You are not authorized to access this page. Please login as SuperAdmin\", \"Admin Page\");\n        //this.router.navigate(['/login']);\n        return false;\n      }\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenAuthGuard implements CanActivate {\n\n  constructor(private router: Router) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n      if(localStorage.getItem('token') != null)\n    return true;\n    else{\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenNullGuard implements CanActivate {\n\n  constructor(private router: Router) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n      if(localStorage.getItem('token') == null)\n      return true;\n      else{\n        this.router.navigate(['']);\n        return false;\n      }\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from \"@angular/router\";\nimport { tap } from \"rxjs/operators\";\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    if (localStorage.getItem('token') != null)\n    {\n      const clonedReq = request.clone({\n        headers: request.headers.set('Authorization', 'Bearer ' + localStorage.getItem('token'))\n        });\n\n        return next.handle(clonedReq).pipe(\n          tap(\n              succ => { },\n              err => {\n                  if (err.status == 401){\n                      localStorage.removeItem('token');\n                      this.router.navigateByUrl('/login');\n                  }\n              }\n          )\n      )\n    }\n    else\n    {\n       return next.handle(request.clone());\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthorDetailService } from '../../shared/author-detail.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-author-detail-list',\n  templateUrl: './author-detail-list.component.html',\n  styles: []\n})\nexport class AuthorDetailListComponent implements OnInit {\n\n  constructor(public service: AuthorDetailService, public toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.service.refreshList();\n  }\n\n  populateForm(selectedRecord) {\n    this.service.formData = Object.assign({}, selectedRecord);\n  }\n  onDelete(authorId) {\n    if (confirm('Are you sure to delete this record ?')) {\n      if(this.service.formData.AuthorId == authorId)\n      {\n        this.service.formData = {\n          AuthorId:0,\n          FirstName: '',\n          LastName: '',\n          HomeAddress: '',\n          City: '',\n          State: '',\n          Country: ''\n        }\n      }\n      this.service.deleteAuthorDetail(authorId)\n        .subscribe(res => {\n          this.toastr.info('Submitted successfully', 'Author Delete');\n          this.service.refreshList();\n        },\n        err => { console.log(err); })\n    }\n  }\n\n}\n","<div *ngIf=\"!service.list\">Loading...</div>\n\n\n<table class=\"table table-hoverng table-sm\">\n  <tr *ngFor=\"let  authorDetail of service.list\">\n    <td>{{ authorDetail.FirstName }} {{ authorDetail.LastName }}</td>\n    <td>{{ authorDetail.Country }}</td>\n    <td (click)=\"populateForm(authorDetail)\">...</td>\n    <td>\n      <i \n      class=\"far fa-trash-alt fa-lg text-danger\" \n      (click)=\"onDelete(authorDetail.AuthorId)\"></i>\n    </td>\n  </tr>\n</table>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthorDetailService } from '../../shared/author-detail.service';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-author-detail',\n  templateUrl: './author-detail.component.html',\n  styles: ['./author-detail.component.css']\n})\nexport class AuthorDetailComponent implements OnInit {\n\n  constructor(public service: AuthorDetailService, public toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.resetForm();\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null)\n      form.form.reset();\n    this.service.formData = {\n      AuthorId:0,\n      FirstName: '',\n      LastName: '',\n      HomeAddress: '',\n      City: '',\n      State: '',\n      Country: ''\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    if(this.service.formData.AuthorId == 0)\n    {\n      this.insertRecord(form);\n    }\n    else\n    {\n      this.updateRecord(form);\n    }\n  }\n  reset()\n  {\n    this.resetForm();\n  }\n  updateRecord(form: NgForm) {\n    this.service.putAuthorDetail().subscribe(\n      res => {\n        this.resetForm(form);\n        this.toastr.info('Submitted successfully', 'Author Update');\n        this.service.refreshList();\n      },\n      err => {\n        if(err.status == 403)\n        {\n          this.toastr.error(\"You are not authorized to perform this action\",\"Author Update\");\n        }\n        else\n        {\n           this.toastr.error(err.status,\"Author Update\");\n            console.log(err);\n        }\n      }\n    )\n  }\n\n  insertRecord(form: NgForm) {\n    this.service.postAuthorDetail().subscribe(\n      res => {\n        this.resetForm(form);\n        this.toastr.info('Submitted successfully', 'New Author');\n        this.service.refreshList();\n      },\n      err => { \n        if(err.status == 403)\n        {\n          this.toastr.error(\"You are not authorized perform this action\", \"New Author\");\n        }\n        console.log(err); \n      }\n    )\n  }\n\n}\n","<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n    <input type=\"hidden\" name=\"AuthorId\" [value]=\"service.formData.AuthorId\">\n    <div class=\"form-group\">\n      <input name=\"FirstName\" #FirstName=\"ngModel\" [(ngModel)]=\"service.formData.FirstName\" class=\"form-control\"\n             placeholder=\"First Name\" required>\n    </div>\n    <div class=\"form-group\">\n      <input name=\"LastName\" #LastName=\"ngModel\" [(ngModel)]=\"service.formData.LastName\" class=\"form-control\"\n             placeholder=\"Last Name\" required>\n    </div>\n    <div class=\"form-group\">\n      <input name=\"HomeAddress\" #HomeAddress=\"ngModel\" [(ngModel)]=\"service.formData.HomeAddress\" class=\"form-control\"\n             placeholder=\"Home Address\" required>\n    </div>\n    <div class=\"form-row\">\n    <div class=\"form-group col-md-5\">\n      <input name=\"City\" #City=\"ngModel\" [(ngModel)]=\"service.formData.City\" class=\"form-control\"\n             placeholder=\"City\" required>\n    </div>\n    <div class=\"form-group col-md-7\">\n      <input name=\"State\" #State=\"ngModel\" [(ngModel)]=\"service.formData.State\" class=\"form-control\"\n             placeholder=\"State\" required>\n    </div>\n    </div>\n    <div class=\"form-group\">\n      <input name=\"Country\" #Country=\"ngModel\" [(ngModel)]=\"service.formData.Country\" class=\"form-control\"\n             placeholder=\"country\" required>\n    </div><div class=\"form-row\">\n <div class=\"form-group col-md-7\">\n    <button class=\"btn btn-primary btn-sm btn-block\" type=\"submit\" [disabled]=\"form.invalid\">Submit</button>\n    </div>\n    <div class=\"form-group col-md-5\">\n      <button class=\"btn btn-secondary btn-sm btn-block\" type=\"button\" [disabled]=\"form.invalid\" (click)=\"reset()\">Clear</button>\n      </div>  \n    </div>\n  </form>\n  ","import { Component, OnInit} from '@angular/core';\n\n\n@Component({\n  selector: 'app-author-details',\n  templateUrl: './author-details.component.html',\n  styles: []\n})\n\n\nexport class AuthorDetailsComponent {\n\n  constructor() { }\n  \n  ngOnInit() {\n  }\n\n}\n\n","<div class=\"jumbotron\">\n  <h1 class=\"display-3 text-center\">Author Register</h1>\n  <hr>\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <app-author-detail></app-author-detail>\n </div>\n   <div class=\"col-md-8\">\n     <app-author-detail-list></app-author-detail-list>\n   </div>\n  </div>\n  </div>\n ","import { Component, OnInit } from '@angular/core';\nimport { BookrequestDetailService } from './../shared/bookrequest-detail.service';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-bookrequest-details',\n  templateUrl: './bookrequest-details.component.html',\n  styles: [\n  ]\n})\nexport class BookrequestDetailsComponent implements OnInit {\n\n  constructor(public service: BookrequestDetailService, public toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.service.refreshList();\n  }\n\n  onUpdate(requestId: number, approved: boolean){\n      this.service.requestId = requestId;\n      this.service.approved = approved\n      this.service.putBookRequestDetail().subscribe(\n        res => {\n          if(approved)\n          {\n            this.toastr.info('Submitted successfully', 'Book Request Approval');\n          }\n          else{\n            this.toastr.info('Submitted successfully', 'Book Request Reject');\n          }\n          this.service.refreshList();\n        },\n        err => {\n          console.log(err);\n        }\n      )\n    }\n}\n","<div class=\"jumbotron\">\n    <h1 class=\"display-3 text-center\">Book Requests</h1>\n    <hr>\n    <div class=\"row\">\n        <div *ngIf=\"!service.list\">Loading...</div>\n       \n        <table class=\"table table-hoverng table-sm\">\n            <tr>\n            <th>Request Token</th>\n            <th>Request Time</th>\n            <th>Process Time</th>\n            <th>Status</th>\n            <th></th>\n            <th></th>\n            <th></th>\n            </tr>\n          <tr *ngFor=\"let  bookRequestDetail of service.list\">\n            <td>{{ bookRequestDetail.RequestToken }}</td>\n            <td>{{ bookRequestDetail.RequestTime }}</td>\n            <td>{{ bookRequestDetail.ProcessTime }}</td>\n            <td>{{ bookRequestDetail.Rstatus }}</td>\n            <td>...</td>\n            <td *ngIf=\"bookRequestDetail.Rstatus == 'Requested'\">\n              <i \n              class=\"fa fa-check fa-lg text-success\" \n              (click)=\"onUpdate(bookRequestDetail.RequestId,true)\"></i>\n            </td>\n            <td *ngIf=\"bookRequestDetail.Rstatus == 'Requested'\">\n                <i \n                class=\"fa fa-ban fa-lg text-danger\" \n                (click)=\"onUpdate(bookRequestDetail.RequestId,false)\"></i>\n              </td>\n          </tr>\n        </table>\n    </div>\n    </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styles: [\n  ]\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"footer border-top text-muted mt-4\">\n    <div class=\"container\">\n        &copy; 2020 - Mohammad Mahfuzun Nabi\n    </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styles: []\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  adminName : string;\n  adminRole: string;\n  adminId: string;\n\n  ngOnInit(): void {\n    if(localStorage.getItem(\"AdminName\") != null)\n    {\n      this.adminName = localStorage.getItem(\"AdminName\");\n      this.adminRole = localStorage.getItem(\"AdminRole\");\n      this.adminId = localStorage.getItem(\"AdminId\");\n    }\n    else\n    {\n      this.adminName = null;\n      this.adminRole = null;\n      this.adminId = null;\n    }\n  }\n\n}\n","<div class=\"text-center\">\n    <h1 class=\"display-4\">Welcome {{this.adminName}}</h1>\n    <p>WellDev Library Administration</p>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginService } from './../shared/login.service'\nimport { browser } from 'protractor';\nimport { NgLocalization } from '@angular/common';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styles: [\n  ]\n})\nexport class LoginComponent implements OnInit {\n\n  formModel = {\n    Uname: '',\n    Upassword: ''\n  }\n\n  constructor(private service: LoginService, private router: Router, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(form: NgForm) {\n    this.service.login(form.value).subscribe(\n      (res: any) => {\n        let jwtData = res.token.split('.')[1];\n        let decodedJwtJsonData = window.atob(jwtData);\n        let decodedJwtData = JSON.parse(decodedJwtJsonData);\n\n        let AdminId = decodedJwtData.AdminId;\n        let AdminName = decodedJwtData.AdminName\n        let AdminRole = decodedJwtData.AdminRole;\n\n        localStorage.setItem('token', res.token);\n        localStorage.setItem('AdminId', AdminId);\n        localStorage.setItem('AdminName', AdminName);\n        localStorage.setItem('AdminRole', AdminRole);\n\n        location.reload();\n       // this.router.navigateByUrl('');\n      },\n      err => {\n        if (err.status == 400)\n          this.toastr.error('Incorrect username or password.', 'Authentication failed.');\n        else\n          console.log(err);\n      }\n    );\n  }\n}\n","<div class=\"jumbotron\">\n    <div class=\"row\">\n        <div class=\"col-md-4\">\n          <form #form='ngForm' autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n            <div class=\"form-row\">\n            <div class=\"form-group\">\n              <input class=\"form-control\" #Uname=\"ngModel\" name=\"Uname\" [(ngModel)]=\"formModel.Uname\" placeholder=\"User Name\" required>\n            </div>\n            </div>\n            <div class=\"form-row\">\n            <div class=\"form-group\">\n               <input type=\"password\" class=\"form-control\" #Upassword=\"ngModel\" name=\"Upassword\" [(ngModel)]=\"formModel.Upassword\" placeholder=\"Password\" required>\n            </div>\n            </div>\n            <div class=\"form-row\">\n             <div class=\"form-group\">\n                <button type=\"submit\" class=\"btn btn-primary btn-sm btn-block\" [disabled]=\"form.invalid\">Login</button>\n              </div>\n            </div>\n          </form>\n          </div>\n        </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { browser } from 'protractor';\n\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styles: [\n  ]\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    localStorage.removeItem('token');\n    localStorage.removeItem('AdminName');\n    localStorage.removeItem('AdminId');\n    localStorage.removeItem('AdminRole');\n    location.reload();\n   //browser.refresh();\n    //this.router.navigate(['']);\n  }\n\n}\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent implements OnInit {\n\n  constructor() { }\n\n  isExpanded = false;\n  isTokenExists = false;\n\n  collapse() {\n    this.isExpanded = false;\n  }\n\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n\n  ngOnInit(): void {\n    if(localStorage.getItem('token') != null)\n    {\n      this.isTokenExists = true;\n    }\n  }\n\n}\n","<header>\n    <nav\n      class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\"\n    >\n      <div class=\"container\">\n        <a class=\"navbar-brand\" [routerLink]=\"['/']\">LibraryAdministration</a>\n        <button\n          class=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\".navbar-collapse\"\n          aria-label=\"Toggle navigation\"\n          [attr.aria-expanded]=\"isExpanded\"\n          (click)=\"toggle()\"\n        >\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div\n          class=\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\"\n          [ngClass]=\"{ show: isExpanded }\"\n        >\n          <ul class=\"navbar-nav flex-grow\">\n            <li class=\"nav-item\"\n                [routerLinkActive]=\"['link-active']\" \n                [routerLinkActiveOptions]=\"{ exact: true }\">\n              <a class=\"nav-link text-dark\" [routerLink]=\"['/']\">Home</a>\n            </li>\n          </ul>\n            <div *ngIf=\"this.isTokenExists\">\n            <ul class=\"navbar-nav flex-grow\">\n            <li class=\"nav-item\"  [routerLinkActive]=\"['link-active']\">\n                <a class=\"nav-link text-dark\" [routerLink]=\"['/author-details']\">Author</a>\n            </li>\n            <li class=\"nav-item\"  [routerLinkActive]=\"['link-active']\">\n              <a class=\"nav-link text-dark\" [routerLink]=\"['/publisher-details']\">Publisher</a>\n          </li>\n          <li class=\"nav-item\"  [routerLinkActive]=\"['link-active']\">\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/bookrequest-details']\">BookRequests</a>\n        </li>\n        <li class=\"nav-item\"  [routerLinkActive]=\"['link-active']\">\n          <a class=\"nav-link text-dark\" [routerLink]=\"['/administrator-details']\">Administrators</a>\n      </li>\n        <li class=\"nav-item\"  [routerLinkActive]=\"['link-active']\">\n          <a class=\"nav-link text-dark\" [routerLink]=\"['/logout']\">Logout</a>\n      </li>\n      </ul>\n    </div>\n    <div *ngIf=\"!this.isTokenExists\">\n    <ul class=\"navbar-nav flex-grow\">\n      <li class=\"nav-item\"  [routerLinkActive]=\"['link-active']\">\n        <a class=\"nav-link text-dark\" [routerLink]=\"['/login']\">Login</a>\n    </li>\n          </ul>\n        </div>\n        </div>\n      </div>\n    </nav>\n  </header>\n  \n","import { Component, OnInit } from '@angular/core';\nimport { PublisherDetailService } from '../../shared/publisher-detail.service';\n\n@Component({\n  selector: 'app-publisher-detail-list',\n  templateUrl: './publisher-detail-list.component.html',\n  styles: [\n  ]\n})\nexport class PublisherDetailListComponent implements OnInit {\n\n  constructor(public service: PublisherDetailService) { }\n\n  ngOnInit(): void {\n    this.service.refreshList();\n  }\n\n  populateForm(selectedRecord) {\n    this.service.formData = Object.assign({}, selectedRecord);\n  }\n\n  onDelete(publisherId) {\n    if (confirm('Are you sure to delete this record ?')) {\n      if(this.service.formData.PublisherId == publisherId)\n      {\n        this.service.formData = {\n          PublisherId:0,\n          PublisherName: '',\n          City: '',\n          State: '',\n          Country: ''\n        }\n      }\n      this.service.deletePublisherDetail(publisherId)\n        .subscribe(res => {\n          this.service.refreshList();\n          \n        },\n        err => { console.log(err); })\n    }\n  }\n\n}\n","<div *ngIf=\"!service.list\">Loading...</div>\n\n\n<table class=\"table table-hoverng table-sm\">\n  <tr *ngFor=\"let  publisherDetail of service.list\">\n    <td>{{ publisherDetail.PublisherName }}</td>\n    <td>{{ publisherDetail.City }}</td>\n    <td>{{ publisherDetail.Country }}</td>\n    <td (click)=\"populateForm(publisherDetail)\">...</td>\n    <td>\n      <i \n      class=\"far fa-trash-alt fa-lg text-danger\" \n      (click)=\"onDelete(publisherDetail.PublisherId)\"></i>\n    </td>\n  </tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { PublisherDetailService } from '../../shared/publisher-detail.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-publisher-detail',\n  templateUrl: './publisher-detail.component.html',\n  styles: [\n  ]\n})\nexport class PublisherDetailComponent implements OnInit {\n\n  constructor(public service: PublisherDetailService) { }\n\n  ngOnInit(): void {\n    this.resetForm();\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null)\n      form.form.reset();\n    this.service.formData = {\n      PublisherId:0,\n      PublisherName:'',\n      City: '',\n      State: '',\n      Country: ''\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    if(this.service.formData.PublisherId == 0)\n    {\n      this.insertRecord(form);\n    }\n    else\n    {\n      this.updateRecord(form);\n    }\n  }\n\n  updateRecord(form: NgForm) {\n    this.service.putPublisherDetail().subscribe(\n      res => {\n        this.resetForm(form);\n       // this.toastr.info('Submitted successfully', 'Payment Detail Register');\n        this.service.refreshList();\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n  insertRecord(form: NgForm) {\n    this.service.postPublisherDetail().subscribe(\n      res => {\n        this.resetForm(form);\n        this.service.refreshList();\n      },\n      err => { console.log(err); }\n    )\n  }\n\n  reset()\n  {\n    this.resetForm();\n  }\n\n}\n","<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n    <input type=\"hidden\" name=\"PublisherId\" [value]=\"service.formData.PublisherId\">\n    <div class=\"form-group\">\n      <input name=\"PublisherName\" #FirstName=\"ngModel\" [(ngModel)]=\"service.formData.PublisherName\" class=\"form-control\"\n             placeholder=\"Publisher Name\" required>\n    </div>\n    <div class=\"form-row\">\n    <div class=\"form-group col-md-5\">\n      <input name=\"City\" #City=\"ngModel\" [(ngModel)]=\"service.formData.City\" class=\"form-control\"\n             placeholder=\"City\" required>\n    </div>\n    <div class=\"form-group col-md-7\">\n      <input name=\"State\" #State=\"ngModel\" [(ngModel)]=\"service.formData.State\" class=\"form-control\"\n             placeholder=\"State\" required>\n    </div>\n    </div>\n    <div class=\"form-group\">\n      <input name=\"Country\" #Country=\"ngModel\" [(ngModel)]=\"service.formData.Country\" class=\"form-control\"\n             placeholder=\"country\" required>\n    </div><div class=\"form-row\">\n <div class=\"form-group col-md-7\">\n    <button class=\"btn btn-primary btn-sm btn-block\" type=\"submit\" [disabled]=\"form.invalid\">Submit</button>\n    </div>\n    <div class=\"form-group col-md-5\">\n      <button class=\"btn btn-secondary btn-sm btn-block\" type=\"button\" [disabled]=\"form.invalid\" (click)=\"reset()\">Clear</button>\n      </div>  \n    </div>\n  </form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-publisher-details',\n  templateUrl: './publisher-details.component.html',\n  styles: [\n  ]\n})\nexport class PublisherDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron\">\n    <h1 class=\"display-3 text-center\">Publisher Register</h1>\n    <hr>\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <app-publisher-detail></app-publisher-detail>\n   </div>\n     <div class=\"col-md-8\">\n       <app-publisher-detail-list></app-publisher-detail-list>\n     </div>\n    </div>\n    </div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AdministratorDetail } from './administrator-detail.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdministratorDetailService {\n\n  formData: AdministratorDetail;\n  readonly rootURL = 'https://localhost:44318/';\n  list: AdministratorDetail[];\n\n  constructor(private http: HttpClient) { }\n\n  postAdministratorDetail() {\n    return this.http.post(this.rootURL + 'api/Administrators', this.formData);\n  }\n  putAdministratorDetail() {\n    return this.http.put(this.rootURL + 'api/Administrators/' + this.formData.AdminId, this.formData);\n  }\n  deleteAdministratorDetail(id) {\n    return this.http.delete(this.rootURL + 'api/Administrators/' + id);\n  }\n\n  refreshList() {\n    this.http.get(this.rootURL + 'api/Administrators')\n      .toPromise()\n      .then(res => this.list = res as AdministratorDetail[]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthorDetail } from './author-detail.model';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorDetailService {\n\n  formData: AuthorDetail;\n  readonly rootURL = 'https://localhost:44318/';\n  list: AuthorDetail[];\n\n  constructor(private http: HttpClient) { }\n\n  postAuthorDetail() {\n    return this.http.post(this.rootURL + 'api/Authors', this.formData);\n  }\n  putAuthorDetail() {\n    return this.http.put(this.rootURL + 'api/Authors/' + this.formData.AuthorId, this.formData);\n  }\n  deleteAuthorDetail(id) {\n    return this.http.delete(this.rootURL + 'api/Authors/' + id);\n  }\n\n  refreshList() {\n    this.http.get(this.rootURL + 'api/Authors')\n      .toPromise()\n      .then(res => this.list = res as AuthorDetail[]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BookrequestDetail } from './bookrequest-detail.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookrequestDetailService {\n\n requestId: number;\n  readonly rootURL = 'https://localhost:44318/';\n  list: BookrequestDetail[];\n  approved: boolean;\n\n  constructor(private http: HttpClient) { }\n\n  putBookRequestDetail() {\n    return this.http.put(this.rootURL + 'api/Requests/' + this.requestId, this.approved);\n  }\n  \n  refreshList() {\n    this.http.get(this.rootURL + 'api/Requests')\n      .toPromise()\n      .then(res => this.list = res as BookrequestDetail[]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private fb: FormBuilder, private http: HttpClient) { }\n\n  readonly BaseURI = 'https://localhost:44318/';\n\n  formModel = this.fb.group({\n    Uname: ['', Validators.required],\n    Upasswords: ['', Validators.required]\n  });\n\n  \n  login(formData) {\n    return this.http.post(this.BaseURI + 'api/Login', formData);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { PublisherDetail } from './publisher-detail.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PublisherDetailService {\n\n  formData: PublisherDetail;\n  readonly rootURL = 'https://localhost:44318/';\n  list: PublisherDetail[];\n\n  constructor(private http: HttpClient ) { }\n\n  postPublisherDetail() {\n    return this.http.post(this.rootURL + 'api/Publishers', this.formData);\n  }\n  putPublisherDetail() {\n    return this.http.put(this.rootURL + 'api/Publishers/' + this.formData.PublisherId, this.formData);\n  }\n  deletePublisherDetail(id) {\n    return this.http.delete(this.rootURL + 'api/Publishers/' + id);\n  }\n\n  refreshList() {\n    this.http.get(this.rootURL + 'api/Publishers')\n      .toPromise()\n      .then(res => this.list = res as PublisherDetail[]);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}