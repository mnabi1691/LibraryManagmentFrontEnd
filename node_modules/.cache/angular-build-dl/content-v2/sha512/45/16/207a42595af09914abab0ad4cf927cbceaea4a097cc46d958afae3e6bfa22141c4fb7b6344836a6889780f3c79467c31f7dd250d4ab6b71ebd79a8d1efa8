{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/author-details/author-detail-list/author-detail-list.component.ts","webpack:///src/app/author-details/author-detail-list/author-detail-list.component.html","webpack:///src/app/author-details/author-detail/author-detail.component.ts","webpack:///src/app/author-details/author-detail/author-detail.component.html","webpack:///src/app/author-details/author-details.component.ts","webpack:///src/app/author-details/author-details.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/nav-menu/nav-menu.component.ts","webpack:///src/app/nav-menu/nav-menu.component.html","webpack:///src/app/publisher-details/publisher-detail-list/publisher-detail-list.component.ts","webpack:///src/app/publisher-details/publisher-detail-list/publisher-detail-list.component.html","webpack:///src/app/publisher-details/publisher-detail/publisher-detail.component.ts","webpack:///src/app/publisher-details/publisher-detail/publisher-detail.component.html","webpack:///src/app/publisher-details/publisher-details.component.ts","webpack:///src/app/publisher-details/publisher-details.component.html","webpack:///src/app/shared/author-detail.service.ts","webpack:///src/app/shared/login.service.ts","webpack:///src/app/shared/publisher-detail.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styles","AppModule","declarations","providers","bootstrap","AuthorDetailListComponent","service","refreshList","selectedRecord","formData","Object","assign","authorId","confirm","AuthorId","FirstName","LastName","HomeAddress","City","State","Country","deleteAuthorDetail","subscribe","res","err","console","log","AuthorDetailComponent","resetForm","form","reset","insertRecord","updateRecord","putAuthorDetail","postAuthorDetail","onSubmit","AuthorDetailsComponent","FooterComponent","HomeComponent","LoginComponent","router","toastr","formModel","Uname","Upassword","login","value","localStorage","setItem","token","status","error","NavMenuComponent","isExpanded","toggle","styleUrls","PublisherDetailListComponent","publisherId","PublisherId","PublisherName","deletePublisherDetail","PublisherDetailComponent","putPublisherDetail","postPublisherDetail","PublisherDetailsComponent","AuthorDetailService","http","rootURL","post","put","get","toPromise","list","providedIn","LoginService","fb","BaseURI","group","required","Upasswords","PublisherDetailService","environment","production","bootstrapModule"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,QAAMC,MAAM,GAAW,CACrB;AAACC,UAAI,EAAE,EAAP;AAAWC,eAAS,EAAE,kEAAtB;AAAqCC,eAAS,EAAE;AAAhD,KADqB,EAErB;AAACF,UAAI,EAAE,gBAAP;AAAyBC,eAAS,EAAE;AAApC,KAFqB,EAGrB;AAACD,UAAI,EAAE,mBAAP;AAA4BC,eAAS,EAAE;AAAvC,KAHqB,EAIrB;AAACD,UAAI,EAAE,OAAP;AAAgBC,eAAS,EAAE;AAA3B,KAJqB,CAAvB;;QAWaE,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBL,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBI,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBL,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACnB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaS,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,SAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,oH;AAAA;AAAA;ACPzB;;AACE;;AACA;;AACE;;AACA;;AACA;;AACF;;AACA;;AACE;;AACF;;AACF;;;;;;;;;sEDHaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA6CaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,CAAC,kFAAD,EAAsB,wFAAtB,EAA8C,mEAA9C,C;AAA2D,gBAN7D,CACP,uEADO,EAEP,qEAFO,EAGP,0DAHO,EAIP,oEAJO,CAM6D;;;;0HAG3DA,S,EAAS;AAAA,uBArBlB,2DAqBkB,EApBlB,6EAoBkB,EAnBlB,kEAmBkB,EAlBlB,+FAkBkB,EAjBlB,2GAiBkB,EAhBlB,0HAgBkB,EAflB,yEAekB,EAdlB,wHAckB,EAblB,yGAakB,EAZlB,sIAYkB,EAXlB,sEAWkB;AAXJ,kBAGd,uEAHc,EAId,qEAJc,EAKd,0DALc,EAMd,oEANc;AAWI,O;AALF,K;;;;;sEAKPA,S,EAAS;cAvBrB,sDAuBqB;eAvBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,6EAFY,EAGZ,kEAHY,EAIZ,+FAJY,EAKZ,2GALY,EAMZ,0HANY,EAOZ,yEAPY,EAQZ,wHARY,EASZ,yGATY,EAUZ,sIAVY,EAWZ,sEAXY,CADN;AAcRP,iBAAO,EAAE,CACP,uEADO,EAEP,qEAFO,EAGP,0DAHO,EAIP,oEAJO,CAdD;AAoBRQ,mBAAS,EAAE,CAAC,kFAAD,EAAsB,wFAAtB,EAA8C,mEAA9C,CApBH;AAqBRC,mBAAS,EAAE,CAAC,2DAAD;AArBH,S;AAuBY,Q;;;;;;;;;;;;;;;;;;AC7CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AAA2B;;AAAU;;;;;;;;AAInC;;AACE;;AAAI;;AAAwD;;AAC5D;;AAAI;;AAA0B;;AAC9B;;AAAI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAqC;;AAAG;;AAC5C;;AACE;;AAEA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0C;;AAC5C;;AACF;;;;;;AARM;;AAAA;;AACA;;AAAA;;;;QDEKC,yB;AAEX,yCAAmBC,OAAnB,EAAiD;AAAA;;AAA9B,aAAAA,OAAA,GAAAA,OAAA;AAAiC;;;;mCAE5C;AACN,eAAKA,OAAL,CAAaC,WAAb;AACD;;;qCAEYC,c,EAAgB;AAC3B,eAAKF,OAAL,CAAaG,QAAb,GAAwBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,cAAlB,CAAxB;AACD;;;iCACQI,Q,EAAU;AAAA;;AACjB,cAAIC,OAAO,CAAC,sCAAD,CAAX,EAAqD;AACnD,gBAAG,KAAKP,OAAL,CAAaG,QAAb,CAAsBK,QAAtB,IAAkCF,QAArC,EACA;AACE,mBAAKN,OAAL,CAAaG,QAAb,GAAwB;AACtBK,wBAAQ,EAAC,CADa;AAEtBC,yBAAS,EAAE,EAFW;AAGtBC,wBAAQ,EAAE,EAHY;AAItBC,2BAAW,EAAE,EAJS;AAKtBC,oBAAI,EAAE,EALgB;AAMtBC,qBAAK,EAAE,EANe;AAOtBC,uBAAO,EAAE;AAPa,eAAxB;AASD;;AACD,iBAAKd,OAAL,CAAae,kBAAb,CAAgCT,QAAhC,EACGU,SADH,CACa,UAAAC,GAAG,EAAI;AAChB,mBAAI,CAACjB,OAAL,CAAaC,WAAb;AAED,aAJH,EAKE,UAAAiB,GAAG,EAAI;AAAEC,qBAAO,CAACC,GAAR,CAAYF,GAAZ;AAAmB,aAL9B;AAMD;AACF;;;;;;;uBAhCUnB,yB,EAAyB,kJ;AAAA,K;;;YAAzBA,yB;AAAyB,6C;AAAA,c;AAAA,a;AAAA,6K;AAAA;AAAA;ACRtC;;AAGA;;AACE;;AAUF;;;;AAdK;;AAIC;;AAAA;;;;;;;;;sEDIOA,yB,EAAyB;cALrC,uDAKqC;eAL3B;AACTP,kBAAQ,EAAE,wBADD;AAETC,qBAAW,EAAE,qCAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAK2B,Q;;;;;;;;;;;;;;;;;;;;;;AERtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUa2B,qB;AAEX,qCAAmBrB,OAAnB,EAAiD;AAAA;;AAA9B,aAAAA,OAAA,GAAAA,OAAA;AAAiC;;;;mCAEzC;AACT,eAAKsB,SAAL;AACD;;;kCAESC,I,EAAe;AACvB,cAAIA,IAAI,IAAI,IAAZ,EACEA,IAAI,CAACA,IAAL,CAAUC,KAAV;AACF,eAAKxB,OAAL,CAAaG,QAAb,GAAwB;AACtBK,oBAAQ,EAAC,CADa;AAEtBC,qBAAS,EAAE,EAFW;AAGtBC,oBAAQ,EAAE,EAHY;AAItBC,uBAAW,EAAE,EAJS;AAKtBC,gBAAI,EAAE,EALgB;AAMtBC,iBAAK,EAAE,EANe;AAOtBC,mBAAO,EAAE;AAPa,WAAxB;AASD;;;iCAEQS,I,EAAc;AACrB,cAAG,KAAKvB,OAAL,CAAaG,QAAb,CAAsBK,QAAtB,IAAkC,CAArC,EACA;AACE,iBAAKiB,YAAL,CAAkBF,IAAlB;AACD,WAHD,MAKA;AACE,iBAAKG,YAAL,CAAkBH,IAAlB;AACD;AACF;;;gCACI;AAEH,eAAKD,SAAL;AACD;;;qCACYC,I,EAAc;AAAA;;AACzB,eAAKvB,OAAL,CAAa2B,eAAb,GAA+BX,SAA/B,CACE,UAAAC,GAAG,EAAI;AACL,kBAAI,CAACK,SAAL,CAAeC,IAAf,EADK,CAEN;;;AACC,kBAAI,CAACvB,OAAL,CAAaC,WAAb;AACD,WALH,EAME,UAAAiB,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,WARH;AAUD;;;qCAEYK,I,EAAc;AAAA;;AACzB,eAAKvB,OAAL,CAAa4B,gBAAb,GAAgCZ,SAAhC,CACE,UAAAC,GAAG,EAAI;AACL,kBAAI,CAACK,SAAL,CAAeC,IAAf;;AACA,kBAAI,CAACvB,OAAL,CAAaC,WAAb;AACD,WAJH,EAKE,UAAAiB,GAAG,EAAI;AAAEC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AAAmB,WAL9B;AAOD;;;;;;;uBAzDUG,qB,EAAqB,kJ;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,e;AAAA,a;AAAA,8sC;AAAA;AAAA;;;ACVlC;;AAAwC;AAAA;;AAAA;;AAAA,mBAAU,IAAAQ,QAAA,KAAV;AAAwB,WAAxB;;AACpC;;AACA;;AACE;;AAA6C;AAAA;AAAA;;AAA7C;;AAEF;;AACA;;AACE;;AAA2C;AAAA;AAAA;;AAA3C;;AAEF;;AACA;;AACE;;AAAiD;AAAA;AAAA;;AAAjD;;AAEF;;AACA;;AACA;;AACE;;AAAmC;AAAA;AAAA;;AAAnC;;AAEF;;AACA;;AACE;;AAAqC;AAAA;AAAA;;AAArC;;AAEF;;AACA;;AACA;;AACE;;AAAyC;AAAA;AAAA;;AAAzC;;AAEF;;AAAM;;AACT;;AACG;;AAAyF;;AAAM;;AAC/F;;AACA;;AACE;;AAA2F;AAAA,mBAAS,IAAAL,KAAA,EAAT;AAAgB,WAAhB;;AAAkB;;AAAK;;AAClH;;AACF;;AACF;;;;;;AAlCuC;;AAAA;;AAEU;;AAAA;;AAIF;;AAAA;;AAIM;;AAAA;;AAKd;;AAAA;;AAIE;;AAAA;;AAKI;;AAAA;;AAIoB;;AAAA;;AAGI;;AAAA;;;;;;;;;sEDtB1DH,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT7B,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,gBAAM,EAAE,CAAC,+BAAD;AAHC,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;AEVlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaoC,sB;AAEX,wCAAc;AAAA;AAAG;;;;mCAEN,CACV;;;;;;;uBALUA,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,yC;AAAA,c;AAAA,a;AAAA,+G;AAAA;AAAA;ACVnC;;AACE;;AAAkC;;AAAe;;AACjD;;AACA;;AACE;;AACE;;AACL;;AACE;;AACE;;AACF;;AACD;;AACA;;;;;;;;;sEDDWA,sB,EAAsB;cAPlC,uDAOkC;eAPxB;AACTtC,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAOwB,Q;;;;;;;;;;;;;;;;;;;;AEVnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaqC,e;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,mF;AAAA;AAAA;ACR5B;;AACI;;AACI;;AACJ;;AACJ;;;;;;;;sEDIaA,e,EAAe;cAN3B,uDAM2B;eANjB;AACTvC,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAMiB,Q;;;;;;;;;;;;;;;;;;;;AER5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOasC,a;AAEX,+BAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,oD;AAAA;AAAA;ACP1B;;AACI;;AAAsB;;AAAO;;AAC7B;;AAAG;;AAAyC;;AAC9C;;;;;;;;sEDIWA,a,EAAa;cALzB,uDAKyB;eALf;AACTxC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYauC,c;AAOX,8BAAoBjC,OAApB,EAAmDkC,MAAnD,EAA2EC,MAA3E,EAAkG;AAAA;;AAA9E,aAAAnC,OAAA,GAAAA,OAAA;AAA+B,aAAAkC,MAAA,GAAAA,MAAA;AAAwB,aAAAC,MAAA,GAAAA,MAAA;AAL3E,aAAAC,SAAA,GAAY;AACVC,eAAK,EAAE,EADG;AAEVC,mBAAS,EAAE;AAFD,SAAZ;AAKqG;;;;mCAE7F,CACP;;;iCAEQf,I,EAAc;AAAA;;AACrB,eAAKvB,OAAL,CAAauC,KAAb,CAAmBhB,IAAI,CAACiB,KAAxB,EAA+BxB,SAA/B,CACE,UAACC,GAAD,EAAc;AACZwB,wBAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BzB,GAAG,CAAC0B,KAAlC,EADY,CAEZ;AACD,WAJH,EAKE,UAAAzB,GAAG,EAAI;AACL,gBAAIA,GAAG,CAAC0B,MAAJ,IAAc,GAAlB,EACE,MAAI,CAACT,MAAL,CAAYU,KAAZ,CAAkB,iCAAlB,EAAqD,wBAArD,EADF,KAGE1B,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,WAVH;AAYD;;;;;;;uBAzBUe,c,EAAc,mI,EAAA,uH,EAAA,yH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,+e;AAAA;AAAA;;;ACZ3B;;AACI;;AAAqD;AAAA;;AAAA;;AAAA,mBAAU,IAAAJ,QAAA,KAAV;AAAwB,WAAxB;;AACjD;;AACE;;AAAO;;AAAQ;;AACf;;AAA6D;AAAA;AAAA;;AAA7D;;AACF;;AACA;;AACE;;AAAO;;AAAQ;;AACf;;AAAiF;AAAA;AAAA;;AAAjF;;AACF;;AACA;;AACE;;AACE;;AAA6E;;AAAK;;AACpF;;AACF;;AACF;;AACN;;;;;;AAZuE;;AAAA;;AAIoB;;AAAA;;AAI5B;;AAAA;;;;;;;;;sEDAlDI,c,EAAc;cAN1B,uDAM0B;eANhB;AACTzC,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAMgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAOaoD,gB;AAEX,kCAAc;AAAA;;AAEd,aAAAC,UAAA,GAAa,KAAb;AAFiB;;;;mCAIN;AACT,eAAKA,UAAL,GAAkB,KAAlB;AACD;;;iCAEQ;AACP,eAAKA,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AACD;;;mCAEO,CACP;;;;;;;uBAfUD,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,mC;AAAA,e;AAAA,c;AAAA,6oB;AAAA;AAAA;ACP7B;;AACI;;AAGE;;AACE;;AAA6C;;AAA+B;;AAC5E;;AAOE;AAAA,mBAAS,IAAAE,MAAA,EAAT;AAAiB,WAAjB;;AAEA;;AACF;;AACA;;AAIE;;AACE;;AAGE;;AAAmD;;AAAI;;AACzD;;AACA;;AACI;;AAAiE;;AAAM;;AAC3E;;AACA;;AACE;;AAAoE;;AAAS;;AACjF;;AACA;;AACE;;AAAwD;;AAAK;;AACjE;;AACE;;AACF;;AACF;;AACF;;AACF;;;;AAnC8B;;AAAA;;AAOtB;;AAAA;;AAOA;;AAAA;;AAIM;;AAAA,+JAAoC,yBAApC,EAAoC,sEAApC;;AAE4B;;AAAA;;AAEV;;AAAA;;AACY;;AAAA;;AAEZ;;AAAA;;AACU;;AAAA;;AAEZ;;AAAA;;AACU;;AAAA;;;;;;;;;sED3B7BF,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTtD,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTwD,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;AEP7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AAA2B;;AAAU;;;;;;;;AAInC;;AACE;;AAAI;;AAAmC;;AACvC;;AAAI;;AAA0B;;AAC9B;;AAAI;;AAA6B;;AACjC;;AAAI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwC;;AAAG;;AAC/C;;AACE;;AAEA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgD;;AAClD;;AACF;;;;;;AATM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;QDEKC,4B;AAEX,4CAAmBlD,OAAnB,EAAoD;AAAA;;AAAjC,aAAAA,OAAA,GAAAA,OAAA;AAAoC;;;;mCAE/C;AACN,eAAKA,OAAL,CAAaC,WAAb;AACD;;;qCAEYC,c,EAAgB;AAC3B,eAAKF,OAAL,CAAaG,QAAb,GAAwBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,cAAlB,CAAxB;AACD;;;iCAEQiD,W,EAAa;AAAA;;AACpB,cAAI5C,OAAO,CAAC,sCAAD,CAAX,EAAqD;AACnD,gBAAG,KAAKP,OAAL,CAAaG,QAAb,CAAsBiD,WAAtB,IAAqCD,WAAxC,EACA;AACE,mBAAKnD,OAAL,CAAaG,QAAb,GAAwB;AACtBiD,2BAAW,EAAC,CADU;AAEtBC,6BAAa,EAAE,EAFO;AAGtBzC,oBAAI,EAAE,EAHgB;AAItBC,qBAAK,EAAE,EAJe;AAKtBC,uBAAO,EAAE;AALa,eAAxB;AAOD;;AACD,iBAAKd,OAAL,CAAasD,qBAAb,CAAmCH,WAAnC,EACGnC,SADH,CACa,UAAAC,GAAG,EAAI;AAChB,oBAAI,CAACjB,OAAL,CAAaC,WAAb;AAED,aAJH,EAKE,UAAAiB,GAAG,EAAI;AAAEC,qBAAO,CAACC,GAAR,CAAYF,GAAZ;AAAmB,aAL9B;AAMD;AACF;;;;;;;uBA/BUgC,4B,EAA4B,wJ;AAAA,K;;;YAA5BA,4B;AAA4B,gD;AAAA,c;AAAA,a;AAAA,6K;AAAA;AAAA;ACTzC;;AAGA;;AACE;;AAWF;;;;AAfK;;AAIC;;AAAA;;;;;;;;;sEDKOA,4B,EAA4B;cANxC,uDAMwC;eAN9B;AACT1D,kBAAQ,EAAE,2BADD;AAETC,qBAAW,EAAE,wCAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAM8B,Q;;;;;;;;;;;;;;;;;;;;;;AETzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUa6D,wB;AAEX,wCAAmBvD,OAAnB,EAAoD;AAAA;;AAAjC,aAAAA,OAAA,GAAAA,OAAA;AAAoC;;;;mCAE/C;AACN,eAAKsB,SAAL;AACD;;;kCAESC,I,EAAe;AACvB,cAAIA,IAAI,IAAI,IAAZ,EACEA,IAAI,CAACA,IAAL,CAAUC,KAAV;AACF,eAAKxB,OAAL,CAAaG,QAAb,GAAwB;AACtBiD,uBAAW,EAAC,CADU;AAEtBC,yBAAa,EAAC,EAFQ;AAGtBzC,gBAAI,EAAE,EAHgB;AAItBC,iBAAK,EAAE,EAJe;AAKtBC,mBAAO,EAAE;AALa,WAAxB;AAOD;;;iCAEQS,I,EAAc;AACrB,cAAG,KAAKvB,OAAL,CAAaG,QAAb,CAAsBiD,WAAtB,IAAqC,CAAxC,EACA;AACE,iBAAK3B,YAAL,CAAkBF,IAAlB;AACD,WAHD,MAKA;AACE,iBAAKG,YAAL,CAAkBH,IAAlB;AACD;AACF;;;qCAEYA,I,EAAc;AAAA;;AACzB,eAAKvB,OAAL,CAAawD,kBAAb,GAAkCxC,SAAlC,CACE,UAAAC,GAAG,EAAI;AACL,kBAAI,CAACK,SAAL,CAAeC,IAAf,EADK,CAEN;;;AACC,kBAAI,CAACvB,OAAL,CAAaC,WAAb;AACD,WALH,EAME,UAAAiB,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,WARH;AAUD;;;qCAEYK,I,EAAc;AAAA;;AACzB,eAAKvB,OAAL,CAAayD,mBAAb,GAAmCzC,SAAnC,CACE,UAAAC,GAAG,EAAI;AACL,kBAAI,CAACK,SAAL,CAAeC,IAAf;;AACA,kBAAI,CAACvB,OAAL,CAAaC,WAAb;AACD,WAJH,EAKE,UAAAiB,GAAG,EAAI;AAAEC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AAAmB,WAL9B;AAOD;;;gCAEI;AAEH,eAAKI,SAAL;AACD;;;;;;;uBAzDUiC,wB,EAAwB,wJ;AAAA,K;;;YAAxBA,wB;AAAwB,2C;AAAA,e;AAAA,a;AAAA,s7B;AAAA;AAAA;;;ACVrC;;AAAwC;AAAA;;AAAA;;AAAA,mBAAU,IAAA1B,QAAA,KAAV;AAAwB,WAAxB;;AACpC;;AACA;;AACE;;AAAiD;AAAA;AAAA;;AAAjD;;AAEF;;AACA;;AACA;;AACE;;AAAmC;AAAA;AAAA;;AAAnC;;AAEF;;AACA;;AACE;;AAAqC;AAAA;AAAA;;AAArC;;AAEF;;AACA;;AACA;;AACE;;AAAyC;AAAA;AAAA;;AAAzC;;AAEF;;AAAM;;AACT;;AACG;;AAAyF;;AAAM;;AAC/F;;AACA;;AACE;;AAA2F;AAAA,mBAAS,IAAAL,KAAA,EAAT;AAAgB,WAAhB;;AAAkB;;AAAK;;AAClH;;AACF;;AACF;;;;;;AA1B0C;;AAAA;;AAEW;;AAAA;;AAKd;;AAAA;;AAIE;;AAAA;;AAKI;;AAAA;;AAIoB;;AAAA;;AAGI;;AAAA;;;;;;;;;sEDd1D+B,wB,EAAwB;cANpC,uDAMoC;eAN1B;AACT/D,kBAAQ,EAAE,sBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAM0B,Q;;;;;;;;;;;;;;;;;;;;;;AEVrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQagE,yB;AAEX,2CAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,yB;AAAyB,K;;;YAAzBA,yB;AAAyB,4C;AAAA,c;AAAA,a;AAAA,+G;AAAA;AAAA;ACRtC;;AACI;;AAAkC;;AAAkB;;AACpD;;AACA;;AACE;;AACE;;AACL;;AACE;;AACE;;AACF;;AACD;;AACA;;;;;;;;;sEDHSA,yB,EAAyB;cANrC,uDAMqC;eAN3B;AACTlE,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,gBAAM,EAAE;AAHC,S;AAM2B,Q;;;;;;;;;;;;;;;;;;;;AERtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaiE,mB;AAMX,mCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAHX,aAAAC,OAAA,GAAU,0BAAV;AAGgC;;;;2CAEtB;AACjB,iBAAO,KAAKD,IAAL,CAAUE,IAAV,CAAe,KAAKD,OAAL,GAAe,aAA9B,EAA6C,KAAK1D,QAAlD,CAAP;AACD;;;0CACiB;AAChB,iBAAO,KAAKyD,IAAL,CAAUG,GAAV,CAAc,KAAKF,OAAL,GAAe,cAAf,GAAgC,KAAK1D,QAAL,CAAcK,QAA5D,EAAsE,KAAKL,QAA3E,CAAP;AACD;;;2CACkBrB,E,EAAI;AACrB,iBAAO,KAAK8E,IAAL,WAAiB,KAAKC,OAAL,GAAe,cAAf,GAAgC/E,EAAjD,CAAP;AACD;;;sCAEa;AAAA;;AACZ,eAAK8E,IAAL,CAAUI,GAAV,CAAc,KAAKH,OAAL,GAAe,aAA7B,EACGI,SADH,GAEG1F,IAFH,CAEQ,UAAA0C,GAAG;AAAA,mBAAI,MAAI,CAACiD,IAAL,GAAYjD,GAAhB;AAAA,WAFX;AAGD;;;;;;;uBAtBU0C,mB,EAAmB,uH;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFlB;;;;;sEAEDA,mB,EAAmB;cAH/B,wDAG+B;eAHpB;AACVQ,oBAAU,EAAE;AADF,S;AAGoB,Q;;;;;;;;;;;;;;;;;;;;;;ACPhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,Y;AAEX,4BAAoBC,EAApB,EAA6CT,IAA7C,EAA+D;AAAA;;AAA3C,aAAAS,EAAA,GAAAA,EAAA;AAAyB,aAAAT,IAAA,GAAAA,IAAA;AAEpC,aAAAU,OAAA,GAAU,0BAAV;AAET,aAAAlC,SAAA,GAAY,KAAKiC,EAAL,CAAQE,KAAR,CAAc;AACxBlC,eAAK,EAAE,CAAC,EAAD,EAAK,0DAAWmC,QAAhB,CADiB;AAExBC,oBAAU,EAAE,CAAC,EAAD,EAAK,0DAAWD,QAAhB;AAFY,SAAd,CAAZ;AAJkE;;;;8BAU5DrE,Q,EAAU;AACd,iBAAO,KAAKyD,IAAL,CAAUE,IAAV,CAAe,KAAKQ,OAAL,GAAe,WAA9B,EAA2CnE,QAA3C,CAAP;AACD;;;;;;;uBAdUiE,Y,EAAY,kH,EAAA,uH;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACVD,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;;;;;ACPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaO,sB;AAMX,sCAAoBd,IAApB,EAAoC;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AAHX,aAAAC,OAAA,GAAU,0BAAV;AAGiC;;;;8CAEpB;AACpB,iBAAO,KAAKD,IAAL,CAAUE,IAAV,CAAe,KAAKD,OAAL,GAAe,gBAA9B,EAAgD,KAAK1D,QAArD,CAAP;AACD;;;6CACoB;AACnB,iBAAO,KAAKyD,IAAL,CAAUG,GAAV,CAAc,KAAKF,OAAL,GAAe,iBAAf,GAAmC,KAAK1D,QAAL,CAAciD,WAA/D,EAA4E,KAAKjD,QAAjF,CAAP;AACD;;;8CACqBrB,E,EAAI;AACxB,iBAAO,KAAK8E,IAAL,WAAiB,KAAKC,OAAL,GAAe,iBAAf,GAAmC/E,EAApD,CAAP;AACD;;;sCAEa;AAAA;;AACZ,eAAK8E,IAAL,CAAUI,GAAV,CAAc,KAAKH,OAAL,GAAe,gBAA7B,EACGI,SADH,GAEG1F,IAFH,CAEQ,UAAA0C,GAAG;AAAA,mBAAI,MAAI,CAACiD,IAAL,GAAYjD,GAAhB;AAAA,WAFX;AAGD;;;;;;;uBAtBUyD,sB,EAAsB,uH;AAAA,K;;;aAAtBA,sB;AAAsB,eAAtBA,sBAAsB,K;AAAA,kBAFrB;;;;;sEAEDA,sB,EAAsB;cAHlC,wDAGkC;eAHvB;AACVP,oBAAU,EAAE;AADF,S;AAGuB,Q;;;;;;;;;;;;;;;;;;;;;;ACPnC;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMQ,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAA3D,GAAG;AAAA,aAAIC,OAAO,CAAC0B,KAAR,CAAc3B,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AuthorDetailsComponent } from './author-details/author-details.component';\nimport { PublisherDetailsComponent } from './publisher-details/publisher-details.component';\nimport { LoginComponent } from './login/login.component';\n\n\nconst routes: Routes = [\n  {path: \"\", component: HomeComponent, pathMatch: \"full\"},\n  {path: \"author-details\", component: AuthorDetailsComponent},\n  {path: \"publisher-details\", component: PublisherDetailsComponent},\n  {path: \"login\", component: LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styles: []\n})\nexport class AppComponent {\n  title = 'crudapp';\n}\n","<body>\n  <app-nav-menu></app-nav-menu>\n  <div class=\"container\">\n    <main role=\"main\" class=\"flex-column min-vh-100\">\n    <router-outlet></router-outlet>\n    </main>\n  </div>\n  <div class=\"footer mt-auto py-3\">\n    <app-footer></app-footer>\n  </div>\n</body>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthorDetailsComponent } from './author-details/author-details.component';\nimport { AuthorDetailComponent } from './author-details/author-detail/author-detail.component';\nimport { AuthorDetailListComponent } from './author-details/author-detail-list/author-detail-list.component';\nimport {AuthorDetailService} from './shared/author-detail.service';\nimport { FooterComponent } from './footer/footer.component';\nimport { PublisherDetailComponent } from './publisher-details/publisher-detail/publisher-detail.component';\nimport { PublisherDetailsComponent } from './publisher-details/publisher-details.component';\nimport { PublisherDetailListComponent } from './publisher-details/publisher-detail-list/publisher-detail-list.component';\nimport { PublisherDetailService } from './shared/publisher-detail.service';\nimport { LoginComponent } from './login/login.component';\nimport { LoginService } from './shared/login.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavMenuComponent,\n    HomeComponent,\n    AuthorDetailsComponent,\n    AuthorDetailComponent,\n    AuthorDetailListComponent,\n    FooterComponent,\n    PublisherDetailComponent,\n    PublisherDetailsComponent,\n    PublisherDetailListComponent,\n    LoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [AuthorDetailService, PublisherDetailService, LoginService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthorDetailService } from '../../shared/author-detail.service';\n\n@Component({\n  selector: 'app-author-detail-list',\n  templateUrl: './author-detail-list.component.html',\n  styles: []\n})\nexport class AuthorDetailListComponent implements OnInit {\n\n  constructor(public service: AuthorDetailService) { }\n\n  ngOnInit(): void {\n    this.service.refreshList();\n  }\n\n  populateForm(selectedRecord) {\n    this.service.formData = Object.assign({}, selectedRecord);\n  }\n  onDelete(authorId) {\n    if (confirm('Are you sure to delete this record ?')) {\n      if(this.service.formData.AuthorId == authorId)\n      {\n        this.service.formData = {\n          AuthorId:0,\n          FirstName: '',\n          LastName: '',\n          HomeAddress: '',\n          City: '',\n          State: '',\n          Country: ''\n        }\n      }\n      this.service.deleteAuthorDetail(authorId)\n        .subscribe(res => {\n          this.service.refreshList();\n          \n        },\n        err => { console.log(err); })\n    }\n  }\n\n}\n","<div *ngIf=\"!service.list\">Loading...</div>\n\n\n<table class=\"table table-hoverng table-sm\">\n  <tr *ngFor=\"let  authorDetail of service.list\">\n    <td>{{ authorDetail.FirstName }} {{ authorDetail.LastName }}</td>\n    <td>{{ authorDetail.Country }}</td>\n    <td (click)=\"populateForm(authorDetail)\">...</td>\n    <td>\n      <i \n      class=\"far fa-trash-alt fa-lg text-danger\" \n      (click)=\"onDelete(authorDetail.AuthorId)\"></i>\n    </td>\n  </tr>\n</table>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthorDetailService } from '../../shared/author-detail.service';\nimport { NgForm } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-author-detail',\n  templateUrl: './author-detail.component.html',\n  styles: ['./author-detail.component.css']\n})\nexport class AuthorDetailComponent implements OnInit {\n\n  constructor(public service: AuthorDetailService) { }\n\n  ngOnInit() {\n    this.resetForm();\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null)\n      form.form.reset();\n    this.service.formData = {\n      AuthorId:0,\n      FirstName: '',\n      LastName: '',\n      HomeAddress: '',\n      City: '',\n      State: '',\n      Country: ''\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    if(this.service.formData.AuthorId == 0)\n    {\n      this.insertRecord(form);\n    }\n    else\n    {\n      this.updateRecord(form);\n    }\n  }\n  reset()\n  {\n    this.resetForm();\n  }\n  updateRecord(form: NgForm) {\n    this.service.putAuthorDetail().subscribe(\n      res => {\n        this.resetForm(form);\n       // this.toastr.info('Submitted successfully', 'Payment Detail Register');\n        this.service.refreshList();\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n  insertRecord(form: NgForm) {\n    this.service.postAuthorDetail().subscribe(\n      res => {\n        this.resetForm(form);\n        this.service.refreshList();\n      },\n      err => { console.log(err); }\n    )\n  }\n\n}\n","<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n    <input type=\"hidden\" name=\"AuthorId\" [value]=\"service.formData.AuthorId\">\n    <div class=\"form-group\">\n      <input name=\"FirstName\" #FirstName=\"ngModel\" [(ngModel)]=\"service.formData.FirstName\" class=\"form-control\"\n             placeholder=\"First Name\" required>\n    </div>\n    <div class=\"form-group\">\n      <input name=\"LastName\" #LastName=\"ngModel\" [(ngModel)]=\"service.formData.LastName\" class=\"form-control\"\n             placeholder=\"Last Name\" required>\n    </div>\n    <div class=\"form-group\">\n      <input name=\"HomeAddress\" #HomeAddress=\"ngModel\" [(ngModel)]=\"service.formData.HomeAddress\" class=\"form-control\"\n             placeholder=\"Home Address\" required>\n    </div>\n    <div class=\"form-row\">\n    <div class=\"form-group col-md-5\">\n      <input name=\"City\" #City=\"ngModel\" [(ngModel)]=\"service.formData.City\" class=\"form-control\"\n             placeholder=\"City\" required>\n    </div>\n    <div class=\"form-group col-md-7\">\n      <input name=\"State\" #State=\"ngModel\" [(ngModel)]=\"service.formData.State\" class=\"form-control\"\n             placeholder=\"State\" required>\n    </div>\n    </div>\n    <div class=\"form-group\">\n      <input name=\"Country\" #Country=\"ngModel\" [(ngModel)]=\"service.formData.Country\" class=\"form-control\"\n             placeholder=\"country\" required>\n    </div><div class=\"form-row\">\n <div class=\"form-group col-md-7\">\n    <button class=\"btn btn-primary btn-sm btn-block\" type=\"submit\" [disabled]=\"form.invalid\">Submit</button>\n    </div>\n    <div class=\"form-group col-md-5\">\n      <button class=\"btn btn-secondary btn-sm btn-block\" type=\"button\" [disabled]=\"form.invalid\" (click)=\"reset()\">Clear</button>\n      </div>  \n    </div>\n  </form>\n  ","import { Component, OnInit} from '@angular/core';\n\n\n@Component({\n  selector: 'app-author-details',\n  templateUrl: './author-details.component.html',\n  styles: []\n})\n\n\nexport class AuthorDetailsComponent {\n\n  constructor() { }\n  \n  ngOnInit() {\n  }\n\n}\n\n","<div class=\"jumbotron\">\n  <h1 class=\"display-3 text-center\">Author Register</h1>\n  <hr>\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <app-author-detail></app-author-detail>\n </div>\n   <div class=\"col-md-8\">\n     <app-author-detail-list></app-author-detail-list>\n   </div>\n  </div>\n  </div>\n ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styles: [\n  ]\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"footer border-top text-muted mt-4\">\n    <div class=\"container\">\n        &copy; 2020 - Mohammad Mahfuzun Nabi\n    </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styles: []\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"text-center\">\n    <h1 class=\"display-4\">Welcome</h1>\n    <p>WellDev Library Management Administration</p>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginService } from './../shared/login.service'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styles: [\n  ]\n})\nexport class LoginComponent implements OnInit {\n\n  formModel = {\n    Uname: '',\n    Upassword: ''\n  }\n\n  constructor(private service: LoginService, private router: Router, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(form: NgForm) {\n    this.service.login(form.value).subscribe(\n      (res: any) => {\n        localStorage.setItem('token', res.token);\n        // this.router.navigateByUrl('/home');\n      },\n      err => {\n        if (err.status == 400)\n          this.toastr.error('Incorrect username or password.', 'Authentication failed.');\n        else\n          console.log(err);\n      }\n    );\n  }\n}\n","<div class=\"jumbotron\">\n    <form #form='ngForm' class=\"mb-4\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n        <div class=\"form-group\">\n          <label>Username</label>\n          <input class=\"form-control\" #UserName=\"ngModel\" name=\"Uname\" [(ngModel)]=\"formModel.Uname\" required>\n        </div>\n        <div class=\"form-group\">\n          <label>Password</label>\n          <input type=\"password\" class=\"form-control\" #Password=\"ngModel\" name=\"Upassword\" [(ngModel)]=\"formModel.Upassword\" required>\n        </div>\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-8 offset-md-2\">\n            <button type=\"submit\" class=\"btn btn-lg btn-block\" [disabled]=\"form.invalid\">Login</button>\n          </div>\n        </div>\n      </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent implements OnInit {\n\n  constructor() { }\n\n  isExpanded = false;\n\n  collapse() {\n    this.isExpanded = false;\n  }\n\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n    <nav\n      class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\"\n    >\n      <div class=\"container\">\n        <a class=\"navbar-brand\" [routerLink]=\"['/']\">LibraryManagementAdministration</a>\n        <button\n          class=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\".navbar-collapse\"\n          aria-label=\"Toggle navigation\"\n          [attr.aria-expanded]=\"isExpanded\"\n          (click)=\"toggle()\"\n        >\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div\n          class=\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\"\n          [ngClass]=\"{ show: isExpanded }\"\n        >\n          <ul class=\"navbar-nav flex-grow\">\n            <li class=\"nav-item\"\n                [routerLinkActive]=\"['link-active']\" \n                [routerLinkActiveOptions]=\"{ exact: true }\">\n              <a class=\"nav-link text-dark\" [routerLink]=\"['/']\">Home</a>\n            </li>\n            <li class=\"nav-item\"  [routerLinkActive]=\"['link-active']\">\n                <a class=\"nav-link text-dark\" [routerLink]=\"['/author-details']\">Author</a>\n            </li>\n            <li class=\"nav-item\"  [routerLinkActive]=\"['link-active']\">\n              <a class=\"nav-link text-dark\" [routerLink]=\"['/publisher-details']\">Publisher</a>\n          </li>\n          <li class=\"nav-item\"  [routerLinkActive]=\"['link-active']\">\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/login']\">Login</a>\n        </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  </header>\n  \n","import { Component, OnInit } from '@angular/core';\nimport { PublisherDetailService } from '../../shared/publisher-detail.service';\n\n@Component({\n  selector: 'app-publisher-detail-list',\n  templateUrl: './publisher-detail-list.component.html',\n  styles: [\n  ]\n})\nexport class PublisherDetailListComponent implements OnInit {\n\n  constructor(public service: PublisherDetailService) { }\n\n  ngOnInit(): void {\n    this.service.refreshList();\n  }\n\n  populateForm(selectedRecord) {\n    this.service.formData = Object.assign({}, selectedRecord);\n  }\n\n  onDelete(publisherId) {\n    if (confirm('Are you sure to delete this record ?')) {\n      if(this.service.formData.PublisherId == publisherId)\n      {\n        this.service.formData = {\n          PublisherId:0,\n          PublisherName: '',\n          City: '',\n          State: '',\n          Country: ''\n        }\n      }\n      this.service.deletePublisherDetail(publisherId)\n        .subscribe(res => {\n          this.service.refreshList();\n          \n        },\n        err => { console.log(err); })\n    }\n  }\n\n}\n","<div *ngIf=\"!service.list\">Loading...</div>\n\n\n<table class=\"table table-hoverng table-sm\">\n  <tr *ngFor=\"let  publisherDetail of service.list\">\n    <td>{{ publisherDetail.PublisherName }}</td>\n    <td>{{ publisherDetail.City }}</td>\n    <td>{{ publisherDetail.Country }}</td>\n    <td (click)=\"populateForm(publisherDetail)\">...</td>\n    <td>\n      <i \n      class=\"far fa-trash-alt fa-lg text-danger\" \n      (click)=\"onDelete(publisherDetail.PublisherId)\"></i>\n    </td>\n  </tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { PublisherDetailService } from '../../shared/publisher-detail.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-publisher-detail',\n  templateUrl: './publisher-detail.component.html',\n  styles: [\n  ]\n})\nexport class PublisherDetailComponent implements OnInit {\n\n  constructor(public service: PublisherDetailService) { }\n\n  ngOnInit(): void {\n    this.resetForm();\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null)\n      form.form.reset();\n    this.service.formData = {\n      PublisherId:0,\n      PublisherName:'',\n      City: '',\n      State: '',\n      Country: ''\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    if(this.service.formData.PublisherId == 0)\n    {\n      this.insertRecord(form);\n    }\n    else\n    {\n      this.updateRecord(form);\n    }\n  }\n\n  updateRecord(form: NgForm) {\n    this.service.putPublisherDetail().subscribe(\n      res => {\n        this.resetForm(form);\n       // this.toastr.info('Submitted successfully', 'Payment Detail Register');\n        this.service.refreshList();\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n  insertRecord(form: NgForm) {\n    this.service.postPublisherDetail().subscribe(\n      res => {\n        this.resetForm(form);\n        this.service.refreshList();\n      },\n      err => { console.log(err); }\n    )\n  }\n\n  reset()\n  {\n    this.resetForm();\n  }\n\n}\n","<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n    <input type=\"hidden\" name=\"PublisherId\" [value]=\"service.formData.PublisherId\">\n    <div class=\"form-group\">\n      <input name=\"PublisherName\" #FirstName=\"ngModel\" [(ngModel)]=\"service.formData.PublisherName\" class=\"form-control\"\n             placeholder=\"Publisher Name\" required>\n    </div>\n    <div class=\"form-row\">\n    <div class=\"form-group col-md-5\">\n      <input name=\"City\" #City=\"ngModel\" [(ngModel)]=\"service.formData.City\" class=\"form-control\"\n             placeholder=\"City\" required>\n    </div>\n    <div class=\"form-group col-md-7\">\n      <input name=\"State\" #State=\"ngModel\" [(ngModel)]=\"service.formData.State\" class=\"form-control\"\n             placeholder=\"State\" required>\n    </div>\n    </div>\n    <div class=\"form-group\">\n      <input name=\"Country\" #Country=\"ngModel\" [(ngModel)]=\"service.formData.Country\" class=\"form-control\"\n             placeholder=\"country\" required>\n    </div><div class=\"form-row\">\n <div class=\"form-group col-md-7\">\n    <button class=\"btn btn-primary btn-sm btn-block\" type=\"submit\" [disabled]=\"form.invalid\">Submit</button>\n    </div>\n    <div class=\"form-group col-md-5\">\n      <button class=\"btn btn-secondary btn-sm btn-block\" type=\"button\" [disabled]=\"form.invalid\" (click)=\"reset()\">Clear</button>\n      </div>  \n    </div>\n  </form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-publisher-details',\n  templateUrl: './publisher-details.component.html',\n  styles: [\n  ]\n})\nexport class PublisherDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron\">\n    <h1 class=\"display-3 text-center\">Publisher Register</h1>\n    <hr>\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <app-publisher-detail></app-publisher-detail>\n   </div>\n     <div class=\"col-md-8\">\n       <app-publisher-detail-list></app-publisher-detail-list>\n     </div>\n    </div>\n    </div>\n","import { Injectable } from '@angular/core';\nimport { AuthorDetail } from './author-detail.model';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorDetailService {\n\n  formData: AuthorDetail;\n  readonly rootURL = 'https://localhost:44318/';\n  list: AuthorDetail[];\n\n  constructor(private http: HttpClient) { }\n\n  postAuthorDetail() {\n    return this.http.post(this.rootURL + 'api/Authors', this.formData);\n  }\n  putAuthorDetail() {\n    return this.http.put(this.rootURL + 'api/Authors/' + this.formData.AuthorId, this.formData);\n  }\n  deleteAuthorDetail(id) {\n    return this.http.delete(this.rootURL + 'api/Authors/' + id);\n  }\n\n  refreshList() {\n    this.http.get(this.rootURL + 'api/Authors')\n      .toPromise()\n      .then(res => this.list = res as AuthorDetail[]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private fb: FormBuilder, private http: HttpClient) { }\n\n  readonly BaseURI = 'https://localhost:44318/';\n\n  formModel = this.fb.group({\n    Uname: ['', Validators.required],\n    Upasswords: ['', Validators.required]\n  });\n\n  \n  login(formData) {\n    return this.http.post(this.BaseURI + 'api/Login', formData);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { PublisherDetail } from './publisher-detail.model'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PublisherDetailService {\n\n  formData: PublisherDetail;\n  readonly rootURL = 'https://localhost:44318/';\n  list: PublisherDetail[];\n\n  constructor(private http: HttpClient ) { }\n\n  postPublisherDetail() {\n    return this.http.post(this.rootURL + 'api/Publishers', this.formData);\n  }\n  putPublisherDetail() {\n    return this.http.put(this.rootURL + 'api/Publishers/' + this.formData.PublisherId, this.formData);\n  }\n  deletePublisherDetail(id) {\n    return this.http.delete(this.rootURL + 'api/Publishers/' + id);\n  }\n\n  refreshList() {\n    this.http.get(this.rootURL + 'api/Publishers')\n      .toPromise()\n      .then(res => this.list = res as PublisherDetail[]);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}