{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/token-auth.guard.ts","./src/app/auth/token-null.guard.ts","./src/app/auth/token.interceptor.ts","./src/app/author-details/author-detail-list/author-detail-list.component.ts","./src/app/author-details/author-detail-list/author-detail-list.component.html","./src/app/author-details/author-detail/author-detail.component.ts","./src/app/author-details/author-detail/author-detail.component.html","./src/app/author-details/author-details.component.ts","./src/app/author-details/author-details.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/logout/logout.component.ts","./src/app/nav-menu/nav-menu.component.ts","./src/app/nav-menu/nav-menu.component.html","./src/app/publisher-details/publisher-detail-list/publisher-detail-list.component.ts","./src/app/publisher-details/publisher-detail-list/publisher-detail-list.component.html","./src/app/publisher-details/publisher-detail/publisher-detail.component.ts","./src/app/publisher-details/publisher-detail/publisher-detail.component.html","./src/app/publisher-details/publisher-details.component.ts","./src/app/publisher-details/publisher-details.component.html","./src/app/shared/author-detail.service.ts","./src/app/shared/login.service.ts","./src/app/shared/publisher-detail.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AuthorDetailsComponent } from './author-details/author-details.component';\nimport { PublisherDetailsComponent } from './publisher-details/publisher-details.component';\nimport { LoginComponent } from './login/login.component';\nimport { TokenAuthGuard } from './auth/token-auth.guard';\nimport { LogoutComponent } from './logout/logout.component';\nimport { TokenNullGuard } from './auth/token-null.guard';\n\n\nconst routes: Routes = [\n  {path: \"\", component: HomeComponent, pathMatch: \"full\"},\n  {path: \"author-details\", component: AuthorDetailsComponent, canActivate:[TokenAuthGuard]},\n  {path: \"login\", component: LoginComponent, canActivate:[TokenNullGuard]},\n  {path: \"publisher-details\", component: PublisherDetailsComponent, canActivate:[TokenAuthGuard]},\n  {path: \"logout\", component: LogoutComponent, canActivate:[TokenAuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit} from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styles: []\n})\nexport class AppComponent implements OnInit {\n  title = 'LibraryManagementAdministration';\n\n  constructor(private router: Router) {\n  }\n\n  ngOnInit() {\n\n    window.addEventListener('storage', (event) => {\n        if (event.storageArea == localStorage) {\n             let token = localStorage.getItem('token_name');\n             if(token == undefined) { \n               // Perform logout\n               //Navigate to login/home\n               location.reload();\n                this.router.navigate(['']); \n             }\n        }\n    });\n  }\n\n}\n","<body>\n  <app-nav-menu></app-nav-menu>\n  <div class=\"container\">\n    <main role=\"main\" class=\"flex-column min-vh-100\">\n    <router-outlet></router-outlet>\n    </main>\n  </div>\n  <div class=\"footer mt-auto py-3\">\n    <app-footer></app-footer>\n  </div>\n</body>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n//import { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ToastrModule } from 'ngx-toastr';\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthorDetailsComponent } from './author-details/author-details.component';\nimport { AuthorDetailComponent } from './author-details/author-detail/author-detail.component';\nimport { AuthorDetailListComponent } from './author-details/author-detail-list/author-detail-list.component';\nimport {AuthorDetailService} from './shared/author-detail.service';\nimport { FooterComponent } from './footer/footer.component';\nimport { PublisherDetailComponent } from './publisher-details/publisher-detail/publisher-detail.component';\nimport { PublisherDetailsComponent } from './publisher-details/publisher-details.component';\nimport { PublisherDetailListComponent } from './publisher-details/publisher-detail-list/publisher-detail-list.component';\nimport { PublisherDetailService } from './shared/publisher-detail.service';\nimport { LoginComponent } from './login/login.component';\nimport { LoginService } from './shared/login.service';\nimport { LogoutComponent } from './logout/logout.component';\nimport { TokenInterceptor } from './auth/token.interceptor';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavMenuComponent,\n    HomeComponent,\n    AuthorDetailsComponent,\n    AuthorDetailComponent,\n    AuthorDetailListComponent,\n    FooterComponent,\n    PublisherDetailComponent,\n    PublisherDetailsComponent,\n    PublisherDetailListComponent,\n    LoginComponent,\n    LogoutComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot({\n      progressBar: true\n    }),\n  ],\n  providers: [AuthorDetailService, PublisherDetailService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptor,\n    multi: true\n  }, LoginService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenAuthGuard implements CanActivate {\n\n  constructor(private router: Router) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n      if(localStorage.getItem('token') != null)\n    return true;\n    else{\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenNullGuard implements CanActivate {\n\n  constructor(private router: Router) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n      if(localStorage.getItem('token') == null)\n      return true;\n      else{\n        this.router.navigate(['']);\n        return false;\n      }\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from \"@angular/router\";\nimport { tap } from \"rxjs/operators\";\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    if (localStorage.getItem('token') != null)\n    {\n      const clonedReq = request.clone({\n        headers: request.headers.set('Authorization', 'Bearer ' + localStorage.getItem('token'))\n        });\n\n        return next.handle(clonedReq).pipe(\n          tap(\n              succ => { },\n              err => {\n                  if (err.status == 401){\n                      localStorage.removeItem('token');\n                      this.router.navigateByUrl('/login');\n                  }\n              }\n          )\n      )\n    }\n    else\n    {\n       return next.handle(request.clone());\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthorDetailService } from '../../shared/author-detail.service';\n\n@Component({\n  selector: 'app-author-detail-list',\n  templateUrl: './author-detail-list.component.html',\n  styles: []\n})\nexport class AuthorDetailListComponent implements OnInit {\n\n  constructor(public service: AuthorDetailService) { }\n\n  ngOnInit(): void {\n    this.service.refreshList();\n  }\n\n  populateForm(selectedRecord) {\n    this.service.formData = Object.assign({}, selectedRecord);\n  }\n  onDelete(authorId) {\n    if (confirm('Are you sure to delete this record ?')) {\n      if(this.service.formData.AuthorId == authorId)\n      {\n        this.service.formData = {\n          AuthorId:0,\n          FirstName: '',\n          LastName: '',\n          HomeAddress: '',\n          City: '',\n          State: '',\n          Country: ''\n        }\n      }\n      this.service.deleteAuthorDetail(authorId)\n        .subscribe(res => {\n          this.service.refreshList();\n          \n        },\n        err => { console.log(err); })\n    }\n  }\n\n}\n","<div *ngIf=\"!service.list\">Loading...</div>\n\n\n<table class=\"table table-hoverng table-sm\">\n  <tr *ngFor=\"let  authorDetail of service.list\">\n    <td>{{ authorDetail.FirstName }} {{ authorDetail.LastName }}</td>\n    <td>{{ authorDetail.Country }}</td>\n    <td (click)=\"populateForm(authorDetail)\">...</td>\n    <td>\n      <i \n      class=\"far fa-trash-alt fa-lg text-danger\" \n      (click)=\"onDelete(authorDetail.AuthorId)\"></i>\n    </td>\n  </tr>\n</table>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthorDetailService } from '../../shared/author-detail.service';\nimport { NgForm } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-author-detail',\n  templateUrl: './author-detail.component.html',\n  styles: ['./author-detail.component.css']\n})\nexport class AuthorDetailComponent implements OnInit {\n\n  constructor(public service: AuthorDetailService) { }\n\n  ngOnInit() {\n    this.resetForm();\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null)\n      form.form.reset();\n    this.service.formData = {\n      AuthorId:0,\n      FirstName: '',\n      LastName: '',\n      HomeAddress: '',\n      City: '',\n      State: '',\n      Country: ''\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    if(this.service.formData.AuthorId == 0)\n    {\n      this.insertRecord(form);\n    }\n    else\n    {\n      this.updateRecord(form);\n    }\n  }\n  reset()\n  {\n    this.resetForm();\n  }\n  updateRecord(form: NgForm) {\n    this.service.putAuthorDetail().subscribe(\n      res => {\n        this.resetForm(form);\n       // this.toastr.info('Submitted successfully', 'Payment Detail Register');\n        this.service.refreshList();\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n  insertRecord(form: NgForm) {\n    this.service.postAuthorDetail().subscribe(\n      res => {\n        this.resetForm(form);\n        this.service.refreshList();\n      },\n      err => { console.log(err); }\n    )\n  }\n\n}\n","<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n    <input type=\"hidden\" name=\"AuthorId\" [value]=\"service.formData.AuthorId\">\n    <div class=\"form-group\">\n      <input name=\"FirstName\" #FirstName=\"ngModel\" [(ngModel)]=\"service.formData.FirstName\" class=\"form-control\"\n             placeholder=\"First Name\" required>\n    </div>\n    <div class=\"form-group\">\n      <input name=\"LastName\" #LastName=\"ngModel\" [(ngModel)]=\"service.formData.LastName\" class=\"form-control\"\n             placeholder=\"Last Name\" required>\n    </div>\n    <div class=\"form-group\">\n      <input name=\"HomeAddress\" #HomeAddress=\"ngModel\" [(ngModel)]=\"service.formData.HomeAddress\" class=\"form-control\"\n             placeholder=\"Home Address\" required>\n    </div>\n    <div class=\"form-row\">\n    <div class=\"form-group col-md-5\">\n      <input name=\"City\" #City=\"ngModel\" [(ngModel)]=\"service.formData.City\" class=\"form-control\"\n             placeholder=\"City\" required>\n    </div>\n    <div class=\"form-group col-md-7\">\n      <input name=\"State\" #State=\"ngModel\" [(ngModel)]=\"service.formData.State\" class=\"form-control\"\n             placeholder=\"State\" required>\n    </div>\n    </div>\n    <div class=\"form-group\">\n      <input name=\"Country\" #Country=\"ngModel\" [(ngModel)]=\"service.formData.Country\" class=\"form-control\"\n             placeholder=\"country\" required>\n    </div><div class=\"form-row\">\n <div class=\"form-group col-md-7\">\n    <button class=\"btn btn-primary btn-sm btn-block\" type=\"submit\" [disabled]=\"form.invalid\">Submit</button>\n    </div>\n    <div class=\"form-group col-md-5\">\n      <button class=\"btn btn-secondary btn-sm btn-block\" type=\"button\" [disabled]=\"form.invalid\" (click)=\"reset()\">Clear</button>\n      </div>  \n    </div>\n  </form>\n  ","import { Component, OnInit} from '@angular/core';\n\n\n@Component({\n  selector: 'app-author-details',\n  templateUrl: './author-details.component.html',\n  styles: []\n})\n\n\nexport class AuthorDetailsComponent {\n\n  constructor() { }\n  \n  ngOnInit() {\n  }\n\n}\n\n","<div class=\"jumbotron\">\n  <h1 class=\"display-3 text-center\">Author Register</h1>\n  <hr>\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <app-author-detail></app-author-detail>\n </div>\n   <div class=\"col-md-8\">\n     <app-author-detail-list></app-author-detail-list>\n   </div>\n  </div>\n  </div>\n ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styles: [\n  ]\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"footer border-top text-muted mt-4\">\n    <div class=\"container\">\n        &copy; 2020 - Mohammad Mahfuzun Nabi\n    </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styles: []\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  adminName : string;\n\n  ngOnInit(): void {\n    if(localStorage.getItem(\"AdminName\") != null)\n    {\n      this.adminName = localStorage.getItem(\"AdminName\");\n    }\n  }\n\n}\n","<div class=\"text-center\">\n    <h1 class=\"display-4\">Welcome {{this.adminName}}</h1>\n    <p>WellDev Library Management Administration</p>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginService } from './../shared/login.service'\nimport { browser } from 'protractor';\nimport { NgLocalization } from '@angular/common';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styles: [\n  ]\n})\nexport class LoginComponent implements OnInit {\n\n  formModel = {\n    Uname: '',\n    Upassword: ''\n  }\n\n  constructor(private service: LoginService, private router: Router, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(form: NgForm) {\n    this.service.login(form.value).subscribe(\n      (res: any) => {\n        let jwtData = res.token.split('.')[1];\n        let decodedJwtJsonData = window.atob(jwtData);\n        let decodedJwtData = JSON.parse(decodedJwtJsonData);\n\n        let AdminId = decodedJwtData.AdminId;\n        let AdminName = decodedJwtData.AdminName\n        let AdminRole = decodedJwtData.Role;\n\n        localStorage.setItem('token', res.token);\n        localStorage.setItem('AdminId', AdminId);\n        localStorage.setItem('AdminName', AdminName);\n        localStorage.setItem('AdminRole', AdminRole);\n\n        location.reload();\n       // this.router.navigateByUrl('');\n      },\n      err => {\n        if (err.status == 400)\n          this.toastr.error('Incorrect username or password.', 'Authentication failed.');\n        else\n          console.log(err);\n      }\n    );\n  }\n}\n","<div class=\"jumbotron\">\n    <div class=\"row\">\n        <div class=\"col-md-4\">\n          <form #form='ngForm' autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n            <div class=\"form-row\">\n            <div class=\"form-group\">\n              <input class=\"form-control\" #Uname=\"ngModel\" name=\"Uname\" [(ngModel)]=\"formModel.Uname\" placeholder=\"User Name\" required>\n            </div>\n            </div>\n            <div class=\"form-row\">\n            <div class=\"form-group\">\n               <input type=\"password\" class=\"form-control\" #Upassword=\"ngModel\" name=\"Upassword\" [(ngModel)]=\"formModel.Upassword\" placeholder=\"Password\" required>\n            </div>\n            </div>\n            <div class=\"form-row\">\n             <div class=\"form-group\">\n                <button type=\"submit\" class=\"btn btn-primary btn-sm btn-block\" [disabled]=\"form.invalid\">Login</button>\n              </div>\n            </div>\n          </form>\n          </div>\n        </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { browser } from 'protractor';\n\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styles: [\n  ]\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    localStorage.removeItem('token');\n    location.reload();\n   //browser.refresh();\n    //this.router.navigate(['']);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent implements OnInit {\n\n  constructor() { }\n\n  isExpanded = false;\n  isTokenExists = false;\n\n  collapse() {\n    this.isExpanded = false;\n  }\n\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n\n  ngOnInit(): void {\n    if(localStorage.getItem('token') != null)\n    {\n      this.isTokenExists = true;\n    }\n  }\n\n}\n","<header>\n    <nav\n      class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\"\n    >\n      <div class=\"container\">\n        <a class=\"navbar-brand\" [routerLink]=\"['/']\">LibraryAdministration</a>\n        <button\n          class=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\".navbar-collapse\"\n          aria-label=\"Toggle navigation\"\n          [attr.aria-expanded]=\"isExpanded\"\n          (click)=\"toggle()\"\n        >\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div\n          class=\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\"\n          [ngClass]=\"{ show: isExpanded }\"\n        >\n          <ul class=\"navbar-nav flex-grow\">\n            <li class=\"nav-item\"\n                [routerLinkActive]=\"['link-active']\" \n                [routerLinkActiveOptions]=\"{ exact: true }\">\n              <a class=\"nav-link text-dark\" [routerLink]=\"['/']\">Home</a>\n            </li>\n          </ul>\n            <div *ngIf=\"this.isTokenExists\">\n            <ul class=\"navbar-nav flex-grow\">\n            <li class=\"nav-item\"  [routerLinkActive]=\"['link-active']\">\n                <a class=\"nav-link text-dark\" [routerLink]=\"['/author-details']\">Author</a>\n            </li>\n            <li class=\"nav-item\"  [routerLinkActive]=\"['link-active']\">\n              <a class=\"nav-link text-dark\" [routerLink]=\"['/publisher-details']\">Publisher</a>\n          </li>\n        <li class=\"nav-item\"  [routerLinkActive]=\"['link-active']\">\n          <a class=\"nav-link text-dark\" [routerLink]=\"['/logout']\">Logout</a>\n      </li>\n      </ul>\n    </div>\n    <div *ngIf=\"!this.isTokenExists\">\n    <ul class=\"navbar-nav flex-grow\">\n      <li class=\"nav-item\"  [routerLinkActive]=\"['link-active']\">\n        <a class=\"nav-link text-dark\" [routerLink]=\"['/login']\">Login</a>\n    </li>\n          </ul>\n        </div>\n        </div>\n      </div>\n    </nav>\n  </header>\n  \n","import { Component, OnInit } from '@angular/core';\nimport { PublisherDetailService } from '../../shared/publisher-detail.service';\n\n@Component({\n  selector: 'app-publisher-detail-list',\n  templateUrl: './publisher-detail-list.component.html',\n  styles: [\n  ]\n})\nexport class PublisherDetailListComponent implements OnInit {\n\n  constructor(public service: PublisherDetailService) { }\n\n  ngOnInit(): void {\n    this.service.refreshList();\n  }\n\n  populateForm(selectedRecord) {\n    this.service.formData = Object.assign({}, selectedRecord);\n  }\n\n  onDelete(publisherId) {\n    if (confirm('Are you sure to delete this record ?')) {\n      if(this.service.formData.PublisherId == publisherId)\n      {\n        this.service.formData = {\n          PublisherId:0,\n          PublisherName: '',\n          City: '',\n          State: '',\n          Country: ''\n        }\n      }\n      this.service.deletePublisherDetail(publisherId)\n        .subscribe(res => {\n          this.service.refreshList();\n          \n        },\n        err => { console.log(err); })\n    }\n  }\n\n}\n","<div *ngIf=\"!service.list\">Loading...</div>\n\n\n<table class=\"table table-hoverng table-sm\">\n  <tr *ngFor=\"let  publisherDetail of service.list\">\n    <td>{{ publisherDetail.PublisherName }}</td>\n    <td>{{ publisherDetail.City }}</td>\n    <td>{{ publisherDetail.Country }}</td>\n    <td (click)=\"populateForm(publisherDetail)\">...</td>\n    <td>\n      <i \n      class=\"far fa-trash-alt fa-lg text-danger\" \n      (click)=\"onDelete(publisherDetail.PublisherId)\"></i>\n    </td>\n  </tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { PublisherDetailService } from '../../shared/publisher-detail.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-publisher-detail',\n  templateUrl: './publisher-detail.component.html',\n  styles: [\n  ]\n})\nexport class PublisherDetailComponent implements OnInit {\n\n  constructor(public service: PublisherDetailService) { }\n\n  ngOnInit(): void {\n    this.resetForm();\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null)\n      form.form.reset();\n    this.service.formData = {\n      PublisherId:0,\n      PublisherName:'',\n      City: '',\n      State: '',\n      Country: ''\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    if(this.service.formData.PublisherId == 0)\n    {\n      this.insertRecord(form);\n    }\n    else\n    {\n      this.updateRecord(form);\n    }\n  }\n\n  updateRecord(form: NgForm) {\n    this.service.putPublisherDetail().subscribe(\n      res => {\n        this.resetForm(form);\n       // this.toastr.info('Submitted successfully', 'Payment Detail Register');\n        this.service.refreshList();\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n  insertRecord(form: NgForm) {\n    this.service.postPublisherDetail().subscribe(\n      res => {\n        this.resetForm(form);\n        this.service.refreshList();\n      },\n      err => { console.log(err); }\n    )\n  }\n\n  reset()\n  {\n    this.resetForm();\n  }\n\n}\n","<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n    <input type=\"hidden\" name=\"PublisherId\" [value]=\"service.formData.PublisherId\">\n    <div class=\"form-group\">\n      <input name=\"PublisherName\" #FirstName=\"ngModel\" [(ngModel)]=\"service.formData.PublisherName\" class=\"form-control\"\n             placeholder=\"Publisher Name\" required>\n    </div>\n    <div class=\"form-row\">\n    <div class=\"form-group col-md-5\">\n      <input name=\"City\" #City=\"ngModel\" [(ngModel)]=\"service.formData.City\" class=\"form-control\"\n             placeholder=\"City\" required>\n    </div>\n    <div class=\"form-group col-md-7\">\n      <input name=\"State\" #State=\"ngModel\" [(ngModel)]=\"service.formData.State\" class=\"form-control\"\n             placeholder=\"State\" required>\n    </div>\n    </div>\n    <div class=\"form-group\">\n      <input name=\"Country\" #Country=\"ngModel\" [(ngModel)]=\"service.formData.Country\" class=\"form-control\"\n             placeholder=\"country\" required>\n    </div><div class=\"form-row\">\n <div class=\"form-group col-md-7\">\n    <button class=\"btn btn-primary btn-sm btn-block\" type=\"submit\" [disabled]=\"form.invalid\">Submit</button>\n    </div>\n    <div class=\"form-group col-md-5\">\n      <button class=\"btn btn-secondary btn-sm btn-block\" type=\"button\" [disabled]=\"form.invalid\" (click)=\"reset()\">Clear</button>\n      </div>  \n    </div>\n  </form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-publisher-details',\n  templateUrl: './publisher-details.component.html',\n  styles: [\n  ]\n})\nexport class PublisherDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron\">\n    <h1 class=\"display-3 text-center\">Publisher Register</h1>\n    <hr>\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <app-publisher-detail></app-publisher-detail>\n   </div>\n     <div class=\"col-md-8\">\n       <app-publisher-detail-list></app-publisher-detail-list>\n     </div>\n    </div>\n    </div>\n","import { Injectable } from '@angular/core';\nimport { AuthorDetail } from './author-detail.model';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorDetailService {\n\n  formData: AuthorDetail;\n  readonly rootURL = 'https://localhost:44318/';\n  list: AuthorDetail[];\n\n  constructor(private http: HttpClient) { }\n\n  postAuthorDetail() {\n    return this.http.post(this.rootURL + 'api/Authors', this.formData);\n  }\n  putAuthorDetail() {\n    return this.http.put(this.rootURL + 'api/Authors/' + this.formData.AuthorId, this.formData);\n  }\n  deleteAuthorDetail(id) {\n    return this.http.delete(this.rootURL + 'api/Authors/' + id);\n  }\n\n  refreshList() {\n    this.http.get(this.rootURL + 'api/Authors')\n      .toPromise()\n      .then(res => this.list = res as AuthorDetail[]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private fb: FormBuilder, private http: HttpClient) { }\n\n  readonly BaseURI = 'https://localhost:44318/';\n\n  formModel = this.fb.group({\n    Uname: ['', Validators.required],\n    Upasswords: ['', Validators.required]\n  });\n\n  \n  login(formData) {\n    return this.http.post(this.BaseURI + 'api/Login', formData);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { PublisherDetail } from './publisher-detail.model'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PublisherDetailService {\n\n  formData: PublisherDetail;\n  readonly rootURL = 'https://localhost:44318/';\n  list: PublisherDetail[];\n\n  constructor(private http: HttpClient ) { }\n\n  postPublisherDetail() {\n    return this.http.post(this.rootURL + 'api/Publishers', this.formData);\n  }\n  putPublisherDetail() {\n    return this.http.put(this.rootURL + 'api/Publishers/' + this.formData.PublisherId, this.formData);\n  }\n  deletePublisherDetail(id) {\n    return this.http.delete(this.rootURL + 'api/Publishers/' + id);\n  }\n\n  refreshList() {\n    this.http.get(this.rootURL + 'api/Publishers')\n      .toPromise()\n      .then(res => this.list = res as PublisherDetail[]);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}